{
  "data": [
    {
      "service": "Amazon Athena",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonAthena",
      "nameWithPrefix": "ArchitectureServiceAmazonAthena",
      "resources": [
        "AmazonAthenaDataSourceConnectors"
      ]
    },
    {
      "service": "Amazon CloudSearch",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonCloudSearch",
      "nameWithPrefix": "ArchitectureServiceAmazonCloudSearch",
      "resources": [
        "AmazonCloudSearchSearchDocuments"
      ]
    },
    {
      "service": "Amazon Data Firehose",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonDataFirehose",
      "nameWithPrefix": "ArchitectureServiceAmazonDataFirehose"
    },
    {
      "service": "Amazon DataZone",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonDataZone",
      "nameWithPrefix": "ArchitectureServiceAmazonDataZone",
      "resources": [
        "AmazonDataZoneBusinessDataCatalog",
        "AmazonDataZoneDataPortal",
        "AmazonDataZoneDataProjects"
      ]
    },
    {
      "service": "Amazon EMR",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonEMR",
      "nameWithPrefix": "ArchitectureServiceAmazonEMR",
      "resources": [
        "AmazonEMRCluster",
        "AmazonEMREMREngine",
        "AmazonEMRHDFSCluster"
      ]
    },
    {
      "service": "Amazon FinSpace",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonFinSpace",
      "nameWithPrefix": "ArchitectureServiceAmazonFinSpace"
    },
    {
      "service": "Amazon Kinesis",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonKinesis",
      "nameWithPrefix": "ArchitectureServiceAmazonKinesis"
    },
    {
      "service": "Amazon Kinesis Data Streams",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonKinesisDataStreams",
      "nameWithPrefix": "ArchitectureServiceAmazonKinesisDataStreams"
    },
    {
      "service": "Amazon Kinesis Video Streams",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonKinesisVideoStreams",
      "nameWithPrefix": "ArchitectureServiceAmazonKinesisVideoStreams"
    },
    {
      "service": "Amazon Managed Service for Apache Flink",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonManagedServiceforApacheFlink",
      "nameWithPrefix": "ArchitectureServiceAmazonManagedServiceforApacheFlink"
    },
    {
      "service": "Amazon MSK",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonManagedStreamingforApacheKafka",
      "nameWithPrefix": "ArchitectureServiceAmazonManagedStreamingforApacheKafka"
    },
    {
      "service": "Amazon OpenSearch Service",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchService",
      "nameWithPrefix": "ArchitectureServiceAmazonOpenSearchService",
      "resources": [
        "AmazonOpenSearchServiceClusterAdministratorNode",
        "AmazonOpenSearchServiceDataNode",
        "AmazonOpenSearchServiceIndex",
        "AmazonOpenSearchServiceObservability",
        "AmazonOpenSearchServiceOpenSearchDashboards",
        "AmazonOpenSearchServiceOpenSearchIngestion",
        "AmazonOpenSearchServiceTraces",
        "AmazonOpenSearchServiceUltraWarmNode"
      ]
    },
    {
      "service": "Amazon QuickSight",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonQuickSight",
      "nameWithPrefix": "ArchitectureServiceAmazonQuickSight"
    },
    {
      "service": "Amazon Redshift",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshift",
      "nameWithPrefix": "ArchitectureServiceAmazonRedshift",
      "resources": [
        "AmazonRedshiftAutocopy",
        "AmazonRedshiftDataSharingGovernance",
        "AmazonRedshiftDenseComputeNode",
        "AmazonRedshiftDenseStorageNode",
        "AmazonRedshiftML",
        "AmazonRedshiftQueryEditorv20",
        "AmazonRedshiftRA3",
        "AmazonRedshiftStreamingIngestion"
      ]
    },
    {
      "service": "Amazon SageMaker",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonSageMaker",
      "nameWithPrefix": "ArchitectureServiceAmazonSageMaker",
      "resources": [
        "AmazonSageMakerCanvas",
        "AmazonSageMakerGeospatialML",
        "AmazonSageMakerModel",
        "AmazonSageMakerNotebook",
        "AmazonSageMakerShadowTesting",
        "AmazonSageMakerTrain"
      ]
    },
    {
      "service": "AWS Clean Rooms",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AWSCleanRooms",
      "nameWithPrefix": "ArchitectureServiceAWSCleanRooms"
    },
    {
      "service": "AWS Data Exchange",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AWSDataExchange",
      "nameWithPrefix": "ArchitectureServiceAWSDataExchange",
      "resources": [
        "AWSDataExchangeforAPIs"
      ]
    },
    {
      "service": "AWS Entity Resolution",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AWSEntityResolution",
      "nameWithPrefix": "ArchitectureServiceAWSEntityResolution"
    },
    {
      "service": "AWS Glue",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AWSGlue",
      "nameWithPrefix": "ArchitectureServiceAWSGlue",
      "resources": [
        "AWSGlueAWSGlueforRay",
        "AWSGlueCrawler",
        "AWSGlueDataCatalog",
        "AWSGlueDataQuality"
      ]
    },
    {
      "service": "AWS Glue DataBrew",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AWSGlueDataBrew",
      "nameWithPrefix": "ArchitectureServiceAWSGlueDataBrew"
    },
    {
      "service": "AWS Lake Formation",
      "type": "Architecture Service",
      "categories": [
        "Analytics"
      ],
      "name": "AWSLakeFormation",
      "nameWithPrefix": "ArchitectureServiceAWSLakeFormation",
      "resources": [
        "AWSLakeFormationDataLake"
      ]
    },
    {
      "type": "Category",
      "categories": [
        "Analytics"
      ],
      "name": "Analytics",
      "nameWithPrefix": "CategoryAnalytics"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonAthenaDataSourceConnectors",
      "nameWithPrefix": "ResourceAmazonAthenaDataSourceConnectors"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonCloudSearchSearchDocuments",
      "nameWithPrefix": "ResourceAmazonCloudSearchSearchDocuments"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonDataZoneBusinessDataCatalog",
      "nameWithPrefix": "ResourceAmazonDataZoneBusinessDataCatalog"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonDataZoneDataPortal",
      "nameWithPrefix": "ResourceAmazonDataZoneDataPortal"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonDataZoneDataProjects",
      "nameWithPrefix": "ResourceAmazonDataZoneDataProjects"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonEMRCluster",
      "nameWithPrefix": "ResourceAmazonEMRCluster"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonEMREMREngine",
      "nameWithPrefix": "ResourceAmazonEMREMREngine"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonEMRHDFSCluster",
      "nameWithPrefix": "ResourceAmazonEMRHDFSCluster"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonMSKAmazonMSKConnect",
      "nameWithPrefix": "ResourceAmazonMSKAmazonMSKConnect"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceClusterAdministratorNode",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceClusterAdministratorNode"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceDataNode",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceDataNode"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceIndex",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceIndex"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceObservability",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceObservability"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceOpenSearchDashboards",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceOpenSearchDashboards"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceOpenSearchIngestion",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceOpenSearchIngestion"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceTraces",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceTraces"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonOpenSearchServiceUltraWarmNode",
      "nameWithPrefix": "ResourceAmazonOpenSearchServiceUltraWarmNode"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonQuicksightPaginatedReports",
      "nameWithPrefix": "ResourceAmazonQuicksightPaginatedReports"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftAutocopy",
      "nameWithPrefix": "ResourceAmazonRedshiftAutocopy"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftDataSharingGovernance",
      "nameWithPrefix": "ResourceAmazonRedshiftDataSharingGovernance"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftDenseComputeNode",
      "nameWithPrefix": "ResourceAmazonRedshiftDenseComputeNode"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftDenseStorageNode",
      "nameWithPrefix": "ResourceAmazonRedshiftDenseStorageNode"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftML",
      "nameWithPrefix": "ResourceAmazonRedshiftML"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftQueryEditorv20",
      "nameWithPrefix": "ResourceAmazonRedshiftQueryEditorv20"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftRA3",
      "nameWithPrefix": "ResourceAmazonRedshiftRA3"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AmazonRedshiftStreamingIngestion",
      "nameWithPrefix": "ResourceAmazonRedshiftStreamingIngestion"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AWSDataExchangeforAPIs",
      "nameWithPrefix": "ResourceAWSDataExchangeforAPIs"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AWSGlueAWSGlueforRay",
      "nameWithPrefix": "ResourceAWSGlueAWSGlueforRay"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AWSGlueCrawler",
      "nameWithPrefix": "ResourceAWSGlueCrawler"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AWSGlueDataCatalog",
      "nameWithPrefix": "ResourceAWSGlueDataCatalog"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AWSGlueDataQuality",
      "nameWithPrefix": "ResourceAWSGlueDataQuality"
    },
    {
      "type": "Resource",
      "categories": [
        "Analytics"
      ],
      "name": "AWSLakeFormationDataLake",
      "nameWithPrefix": "ResourceAWSLakeFormationDataLake"
    },
    {
      "service": "Amazon AppFlow",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AmazonAppFlow",
      "nameWithPrefix": "ArchitectureServiceAmazonAppFlow"
    },
    {
      "service": "Amazon EventBridge",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AmazonEventBridge",
      "nameWithPrefix": "ArchitectureServiceAmazonEventBridge",
      "resources": [
        "AmazonEventBridgeCustomEventBus",
        "AmazonEventBridgeDefaultEventBus",
        "AmazonEventBridgeEvent",
        "AmazonEventBridgePipes",
        "AmazonEventBridgeRule",
        "AmazonEventBridgeSaasPartnerEvent",
        "AmazonEventBridgeScheduler",
        "AmazonEventBridgeSchema",
        "AmazonEventBridgeSchemaRegistry"
      ]
    },
    {
      "service": "Amazon MWAA",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AmazonManagedWorkflowsforApacheAirflow",
      "nameWithPrefix": "ArchitectureServiceAmazonManagedWorkflowsforApacheAirflow"
    },
    {
      "service": "Amazon MQ",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AmazonMQ",
      "nameWithPrefix": "ArchitectureServiceAmazonMQ",
      "resources": [
        "AmazonMQBroker"
      ]
    },
    {
      "service": "Amazon SNS",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AmazonSimpleNotificationService",
      "nameWithPrefix": "ArchitectureServiceAmazonSimpleNotificationService",
      "resources": [
        "AmazonSimpleNotificationServiceEmailNotification",
        "AmazonSimpleNotificationServiceHTTPNotification",
        "AmazonSimpleNotificationServiceTopic"
      ]
    },
    {
      "service": "Amazon SQS",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AmazonSimpleQueueService",
      "nameWithPrefix": "ArchitectureServiceAmazonSimpleQueueService",
      "resources": [
        "AmazonSimpleQueueServiceMessage",
        "AmazonSimpleQueueServiceQueue"
      ]
    },
    {
      "service": "AWS AppSync",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AWSAppSync",
      "nameWithPrefix": "ArchitectureServiceAWSAppSync"
    },
    {
      "service": "AWS B2B Data Interchange",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AWSB2BDataInterchange",
      "nameWithPrefix": "ArchitectureServiceAWSB2BDataInterchange"
    },
    {
      "service": "AWS Express Workflows",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AWSExpressWorkflows",
      "nameWithPrefix": "ArchitectureServiceAWSExpressWorkflows"
    },
    {
      "service": "AWS Step Functions",
      "type": "Architecture Service",
      "categories": [
        "App Integration"
      ],
      "name": "AWSStepFunctions",
      "nameWithPrefix": "ArchitectureServiceAWSStepFunctions"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeCustomEventBus",
      "nameWithPrefix": "ResourceAmazonEventBridgeCustomEventBus"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeDefaultEventBus",
      "nameWithPrefix": "ResourceAmazonEventBridgeDefaultEventBus"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeEvent",
      "nameWithPrefix": "ResourceAmazonEventBridgeEvent"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgePipes",
      "nameWithPrefix": "ResourceAmazonEventBridgePipes"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeRule",
      "nameWithPrefix": "ResourceAmazonEventBridgeRule"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeSaasPartnerEvent",
      "nameWithPrefix": "ResourceAmazonEventBridgeSaasPartnerEvent"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeScheduler",
      "nameWithPrefix": "ResourceAmazonEventBridgeScheduler"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeSchema",
      "nameWithPrefix": "ResourceAmazonEventBridgeSchema"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonEventBridgeSchemaRegistry",
      "nameWithPrefix": "ResourceAmazonEventBridgeSchemaRegistry"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonMQBroker",
      "nameWithPrefix": "ResourceAmazonMQBroker"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonSimpleNotificationServiceEmailNotification",
      "nameWithPrefix": "ResourceAmazonSimpleNotificationServiceEmailNotification"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonSimpleNotificationServiceHTTPNotification",
      "nameWithPrefix": "ResourceAmazonSimpleNotificationServiceHTTPNotification"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonSimpleNotificationServiceTopic",
      "nameWithPrefix": "ResourceAmazonSimpleNotificationServiceTopic"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonSimpleQueueServiceMessage",
      "nameWithPrefix": "ResourceAmazonSimpleQueueServiceMessage"
    },
    {
      "type": "Resource",
      "categories": [
        "Application Integration"
      ],
      "name": "AmazonSimpleQueueServiceQueue",
      "nameWithPrefix": "ResourceAmazonSimpleQueueServiceQueue"
    },
    {
      "type": "Category",
      "categories": [
        "ApplicationIntegration"
      ],
      "name": "ApplicationIntegration",
      "nameWithPrefix": "CategoryApplicationIntegration"
    },
    {
      "service": "Amazon Augmented AIA2I",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonAugmentedAIA2I",
      "nameWithPrefix": "ArchitectureServiceAmazonAugmentedAIA2I"
    },
    {
      "service": "Amazon Bedrock",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonBedrock",
      "nameWithPrefix": "ArchitectureServiceAmazonBedrock"
    },
    {
      "service": "Amazon CodeGuru",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonCodeGuru",
      "nameWithPrefix": "ArchitectureServiceAmazonCodeGuru"
    },
    {
      "service": "Amazon CodeWhisperer",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonCodeWhisperer",
      "nameWithPrefix": "ArchitectureServiceAmazonCodeWhisperer"
    },
    {
      "service": "Amazon Comprehend",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonComprehend",
      "nameWithPrefix": "ArchitectureServiceAmazonComprehend"
    },
    {
      "service": "Amazon Comprehend Medical",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonComprehendMedical",
      "nameWithPrefix": "ArchitectureServiceAmazonComprehendMedical"
    },
    {
      "service": "Amazon DevOps Guru",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonDevOpsGuru",
      "nameWithPrefix": "ArchitectureServiceAmazonDevOpsGuru",
      "resources": [
        "AmazonDevOpsGuruInsights"
      ]
    },
    {
      "service": "Amazon Elastic Inference",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonElasticInference",
      "nameWithPrefix": "ArchitectureServiceAmazonElasticInference"
    },
    {
      "service": "Amazon Forecast",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonForecast",
      "nameWithPrefix": "ArchitectureServiceAmazonForecast"
    },
    {
      "service": "Amazon Fraud Detector",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonFraudDetector",
      "nameWithPrefix": "ArchitectureServiceAmazonFraudDetector"
    },
    {
      "service": "Amazon Kendra",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonKendra",
      "nameWithPrefix": "ArchitectureServiceAmazonKendra"
    },
    {
      "service": "Amazon Lex",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonLex",
      "nameWithPrefix": "ArchitectureServiceAmazonLex"
    },
    {
      "service": "Amazon Lookout for Equipment",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonLookoutforEquipment",
      "nameWithPrefix": "ArchitectureServiceAmazonLookoutforEquipment"
    },
    {
      "service": "Amazon Lookout for Metrics",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonLookoutforMetrics",
      "nameWithPrefix": "ArchitectureServiceAmazonLookoutforMetrics"
    },
    {
      "service": "Amazon Lookout for Vision",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonLookoutforVision",
      "nameWithPrefix": "ArchitectureServiceAmazonLookoutforVision"
    },
    {
      "service": "Amazon Monitron",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonMonitron",
      "nameWithPrefix": "ArchitectureServiceAmazonMonitron"
    },
    {
      "service": "Amazon Nova",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonNova",
      "nameWithPrefix": "ArchitectureServiceAmazonNova"
    },
    {
      "service": "Amazon Personalize",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonPersonalize",
      "nameWithPrefix": "ArchitectureServiceAmazonPersonalize"
    },
    {
      "service": "Amazon Polly",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonPolly",
      "nameWithPrefix": "ArchitectureServiceAmazonPolly"
    },
    {
      "service": "Amazon Q",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonQ",
      "nameWithPrefix": "ArchitectureServiceAmazonQ",
      "resources": [
        "AmazonQuicksightPaginatedReports"
      ]
    },
    {
      "service": "Amazon Rekognition",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonRekognition",
      "nameWithPrefix": "ArchitectureServiceAmazonRekognition",
      "resources": [
        "AmazonRekognitionImage",
        "AmazonRekognitionVideo"
      ]
    },
    {
      "service": "Amazon SageMaker AI",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerAI",
      "nameWithPrefix": "ArchitectureServiceAmazonSageMakerAI",
      "resources": [
        "AmazonSageMakerCanvas",
        "AmazonSageMakerGeospatialML",
        "AmazonSageMakerModel",
        "AmazonSageMakerNotebook",
        "AmazonSageMakerShadowTesting",
        "AmazonSageMakerTrain"
      ]
    },
    {
      "service": "Amazon SageMaker Ground Truth",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerGroundTruth",
      "nameWithPrefix": "ArchitectureServiceAmazonSageMakerGroundTruth"
    },
    {
      "service": "Amazon SageMaker Studio Lab",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerStudioLab",
      "nameWithPrefix": "ArchitectureServiceAmazonSageMakerStudioLab"
    },
    {
      "service": "Amazon Textract",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonTextract",
      "nameWithPrefix": "ArchitectureServiceAmazonTextract",
      "resources": [
        "AmazonTextractAnalyzeLending"
      ]
    },
    {
      "service": "Amazon Transcribe",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonTranscribe",
      "nameWithPrefix": "ArchitectureServiceAmazonTranscribe"
    },
    {
      "service": "Amazon Translate",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonTranslate",
      "nameWithPrefix": "ArchitectureServiceAmazonTranslate"
    },
    {
      "service": "Apache MX Net on AWS",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "ApacheMXNetonAWS",
      "nameWithPrefix": "ArchitectureServiceApacheMXNetonAWS"
    },
    {
      "service": "AWS App Studio",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSAppStudio",
      "nameWithPrefix": "ArchitectureServiceAWSAppStudio"
    },
    {
      "service": "AWS DeepComposer",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSDeepComposer",
      "nameWithPrefix": "ArchitectureServiceAWSDeepComposer"
    },
    {
      "service": "AWS Deep Learning AMIs",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSDeepLearningAMIs",
      "nameWithPrefix": "ArchitectureServiceAWSDeepLearningAMIs"
    },
    {
      "service": "AWS Deep Learning Containers",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSDeepLearningContainers",
      "nameWithPrefix": "ArchitectureServiceAWSDeepLearningContainers"
    },
    {
      "service": "AWS Deep Lens",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSDeepLens",
      "nameWithPrefix": "ArchitectureServiceAWSDeepLens"
    },
    {
      "service": "AWS DeepRacer",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSDeepRacer",
      "nameWithPrefix": "ArchitectureServiceAWSDeepRacer"
    },
    {
      "service": "AWS HealthImaging",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSHealthImaging",
      "nameWithPrefix": "ArchitectureServiceAWSHealthImaging"
    },
    {
      "service": "AWS HealthLake",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSHealthLake",
      "nameWithPrefix": "ArchitectureServiceAWSHealthLake"
    },
    {
      "service": "AWS HealthOmics",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSHealthOmics",
      "nameWithPrefix": "ArchitectureServiceAWSHealthOmics"
    },
    {
      "service": "AWS Health Scribe",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSHealthScribe",
      "nameWithPrefix": "ArchitectureServiceAWSHealthScribe"
    },
    {
      "service": "AWS Neuron",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSNeuron",
      "nameWithPrefix": "ArchitectureServiceAWSNeuron"
    },
    {
      "service": "AWS Panorama",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AWSPanorama",
      "nameWithPrefix": "ArchitectureServiceAWSPanorama"
    },
    {
      "service": "PyTorch on AWS",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "PyTorchonAWS",
      "nameWithPrefix": "ArchitectureServicePyTorchonAWS"
    },
    {
      "service": "TensorFlow on AWS",
      "type": "Architecture Service",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "TensorFlowonAWS",
      "nameWithPrefix": "ArchitectureServiceTensorFlowonAWS"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonDevOpsGuruInsights",
      "nameWithPrefix": "ResourceAmazonDevOpsGuruInsights"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonRekognitionImage",
      "nameWithPrefix": "ResourceAmazonRekognitionImage"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonRekognitionVideo",
      "nameWithPrefix": "ResourceAmazonRekognitionVideo"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerCanvas",
      "nameWithPrefix": "ResourceAmazonSageMakerCanvas"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerGeospatialML",
      "nameWithPrefix": "ResourceAmazonSageMakerGeospatialML"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerModel",
      "nameWithPrefix": "ResourceAmazonSageMakerModel"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerNotebook",
      "nameWithPrefix": "ResourceAmazonSageMakerNotebook"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerShadowTesting",
      "nameWithPrefix": "ResourceAmazonSageMakerShadowTesting"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonSageMakerTrain",
      "nameWithPrefix": "ResourceAmazonSageMakerTrain"
    },
    {
      "type": "Resource",
      "categories": [
        "Artificial Intelligence"
      ],
      "name": "AmazonTextractAnalyzeLending",
      "nameWithPrefix": "ResourceAmazonTextractAnalyzeLending"
    },
    {
      "type": "Category",
      "categories": [
        "ArtificialIntelligence"
      ],
      "name": "ArtificialIntelligence",
      "nameWithPrefix": "CategoryArtificialIntelligence"
    },
    {
      "service": "Amazon Managed Blockchain",
      "type": "Architecture Service",
      "categories": [
        "Blockchain"
      ],
      "name": "AmazonManagedBlockchain",
      "nameWithPrefix": "ArchitectureServiceAmazonManagedBlockchain",
      "resources": [
        "AmazonManagedBlockchainBlockchain"
      ]
    },
    {
      "service": "Amazon Quantum Ledger Database",
      "type": "Architecture Service",
      "categories": [
        "Blockchain"
      ],
      "name": "AmazonQuantumLedgerDatabase",
      "nameWithPrefix": "ArchitectureServiceAmazonQuantumLedgerDatabase"
    },
    {
      "type": "Category",
      "categories": [
        "Blockchain"
      ],
      "name": "Blockchain",
      "nameWithPrefix": "CategoryBlockchain"
    },
    {
      "type": "Resource",
      "categories": [
        "Blockchain"
      ],
      "name": "AmazonManagedBlockchainBlockchain",
      "nameWithPrefix": "ResourceAmazonManagedBlockchainBlockchain"
    },
    {
      "service": "Alexa For Business",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AlexaForBusiness",
      "nameWithPrefix": "ArchitectureServiceAlexaForBusiness"
    },
    {
      "service": "Amazon Chime",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonChime",
      "nameWithPrefix": "ArchitectureServiceAmazonChime"
    },
    {
      "service": "Amazon Chime SDK",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonChimeSDK",
      "nameWithPrefix": "ArchitectureServiceAmazonChimeSDK"
    },
    {
      "service": "Amazon Connect",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonConnect",
      "nameWithPrefix": "ArchitectureServiceAmazonConnect"
    },
    {
      "service": "Amazon Pinpoint",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonPinpoint",
      "nameWithPrefix": "ArchitectureServiceAmazonPinpoint",
      "resources": [
        "AmazonPinpointJourney"
      ]
    },
    {
      "service": "Amazon Pinpoint APIs",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonPinpointAPIs",
      "nameWithPrefix": "ArchitectureServiceAmazonPinpointAPIs"
    },
    {
      "service": "Amazon Simple Email Service",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonSimpleEmailService",
      "nameWithPrefix": "ArchitectureServiceAmazonSimpleEmailService",
      "resources": [
        "AmazonSimpleEmailServiceEmail"
      ]
    },
    {
      "service": "Amazon WorkDocs",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonWorkDocs",
      "nameWithPrefix": "ArchitectureServiceAmazonWorkDocs"
    },
    {
      "service": "Amazon WorkDocs SDK",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonWorkDocsSDK",
      "nameWithPrefix": "ArchitectureServiceAmazonWorkDocsSDK"
    },
    {
      "service": "Amazon WorkMail",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonWorkMail",
      "nameWithPrefix": "ArchitectureServiceAmazonWorkMail"
    },
    {
      "service": "AWS AppFabric",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AWSAppFabric",
      "nameWithPrefix": "ArchitectureServiceAWSAppFabric"
    },
    {
      "service": "AWS End User Messaging",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AWSEndUserMessaging",
      "nameWithPrefix": "ArchitectureServiceAWSEndUserMessaging"
    },
    {
      "service": "AWS Supply Chain",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AWSSupplyChain",
      "nameWithPrefix": "ArchitectureServiceAWSSupplyChain"
    },
    {
      "service": "AWS Wickr",
      "type": "Architecture Service",
      "categories": [
        "Business Applications"
      ],
      "name": "AWSWickr",
      "nameWithPrefix": "ArchitectureServiceAWSWickr"
    },
    {
      "type": "Resource",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonPinpointJourney",
      "nameWithPrefix": "ResourceAmazonPinpointJourney"
    },
    {
      "type": "Resource",
      "categories": [
        "Business Applications"
      ],
      "name": "AmazonSimpleEmailServiceEmail",
      "nameWithPrefix": "ResourceAmazonSimpleEmailServiceEmail"
    },
    {
      "type": "Category",
      "categories": [
        "BusinessApplications"
      ],
      "name": "BusinessApplications",
      "nameWithPrefix": "CategoryBusinessApplications"
    },
    {
      "service": "AWS Billing Conductor",
      "type": "Architecture Service",
      "categories": [
        "Cloud Financial Management"
      ],
      "name": "AWSBillingConductor",
      "nameWithPrefix": "ArchitectureServiceAWSBillingConductor"
    },
    {
      "service": "AWS Budgets",
      "type": "Architecture Service",
      "categories": [
        "Cloud Financial Management"
      ],
      "name": "AWSBudgets",
      "nameWithPrefix": "ArchitectureServiceAWSBudgets"
    },
    {
      "service": "AWS Costand Usage Report",
      "type": "Architecture Service",
      "categories": [
        "Cloud Financial Management"
      ],
      "name": "AWSCostandUsageReport",
      "nameWithPrefix": "ArchitectureServiceAWSCostandUsageReport"
    },
    {
      "service": "AWS Cost Explorer",
      "type": "Architecture Service",
      "categories": [
        "Cloud Financial Management"
      ],
      "name": "AWSCostExplorer",
      "nameWithPrefix": "ArchitectureServiceAWSCostExplorer"
    },
    {
      "service": "Reserved Instance Reporting",
      "type": "Architecture Service",
      "categories": [
        "Cloud Financial Management"
      ],
      "name": "ReservedInstanceReporting",
      "nameWithPrefix": "ArchitectureServiceReservedInstanceReporting"
    },
    {
      "service": "Savings Plans",
      "type": "Architecture Service",
      "categories": [
        "Cloud Financial Management"
      ],
      "name": "SavingsPlans",
      "nameWithPrefix": "ArchitectureServiceSavingsPlans"
    },
    {
      "type": "Category",
      "categories": [
        "CloudFinancialManagement"
      ],
      "name": "CloudFinancialManagement",
      "nameWithPrefix": "CategoryCloudFinancialManagement"
    },
    {
      "service": "Amazon DCV",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AmazonDCV",
      "nameWithPrefix": "ArchitectureServiceAmazonDCV"
    },
    {
      "service": "Amazon EC2",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2",
      "nameWithPrefix": "ArchitectureServiceAmazonEC2",
      "resources": [
        "AmazonEC2AMI",
        "AmazonEC2AutoScaling",
        "AmazonEC2AWSMicroserviceExtractorforNET",
        "AmazonEC2DBInstance",
        "AmazonEC2ElasticIPAddress",
        "AmazonEC2Instance",
        "AmazonEC2Instances",
        "AmazonEC2InstancewithCloudWatch",
        "AmazonEC2Rescue",
        "AmazonEC2SpotInstance"
      ]
    },
    {
      "service": "Amazon EC2 Auto Scaling",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2AutoScaling",
      "nameWithPrefix": "ArchitectureServiceAmazonEC2AutoScaling",
      "resources": [
        "AmazonEC2AutoScaling"
      ]
    },
    {
      "service": "Amazon EC2 Image Builder",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2ImageBuilder",
      "nameWithPrefix": "ArchitectureServiceAmazonEC2ImageBuilder"
    },
    {
      "service": "Amazon Lightsail",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AmazonLightsail",
      "nameWithPrefix": "ArchitectureServiceAmazonLightsail"
    },
    {
      "service": "Amazon Lightsail for Research",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AmazonLightsailforResearch",
      "nameWithPrefix": "ArchitectureServiceAmazonLightsailforResearch"
    },
    {
      "service": "AWS App Runner",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSAppRunner",
      "nameWithPrefix": "ArchitectureServiceAWSAppRunner"
    },
    {
      "service": "AWS Batch",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSBatch",
      "nameWithPrefix": "ArchitectureServiceAWSBatch"
    },
    {
      "service": "AWS Compute Optimizer",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSComputeOptimizer",
      "nameWithPrefix": "ArchitectureServiceAWSComputeOptimizer"
    },
    {
      "service": "AWS Elastic Beanstalk",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSElasticBeanstalk",
      "nameWithPrefix": "ArchitectureServiceAWSElasticBeanstalk",
      "resources": [
        "AWSElasticBeanstalkApplication",
        "AWSElasticBeanstalkDeployment"
      ]
    },
    {
      "service": "AWS Lambda",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSLambda",
      "nameWithPrefix": "ArchitectureServiceAWSLambda",
      "resources": [
        "AWSLambdaLambdaFunction"
      ]
    },
    {
      "service": "AWS Local Zones",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSLocalZones",
      "nameWithPrefix": "ArchitectureServiceAWSLocalZones"
    },
    {
      "service": "AWS Nitro Enclaves",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSNitroEnclaves",
      "nameWithPrefix": "ArchitectureServiceAWSNitroEnclaves"
    },
    {
      "service": "AWS Outposts family",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSOutpostsfamily",
      "nameWithPrefix": "ArchitectureServiceAWSOutpostsfamily"
    },
    {
      "service": "AWS Outposts rack",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSOutpostsrack",
      "nameWithPrefix": "ArchitectureServiceAWSOutpostsrack"
    },
    {
      "service": "AWS Outposts servers",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSOutpostsservers",
      "nameWithPrefix": "ArchitectureServiceAWSOutpostsservers"
    },
    {
      "service": "AWS Parallel Cluster",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSParallelCluster",
      "nameWithPrefix": "ArchitectureServiceAWSParallelCluster"
    },
    {
      "service": "AWS Parallel Computing Service",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSParallelComputingService",
      "nameWithPrefix": "ArchitectureServiceAWSParallelComputingService"
    },
    {
      "service": "AWS Serverless Application Repository",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSServerlessApplicationRepository",
      "nameWithPrefix": "ArchitectureServiceAWSServerlessApplicationRepository"
    },
    {
      "service": "AWS Sim Space Weaver",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSSimSpaceWeaver",
      "nameWithPrefix": "ArchitectureServiceAWSSimSpaceWeaver"
    },
    {
      "service": "AWS Wavelength",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "AWSWavelength",
      "nameWithPrefix": "ArchitectureServiceAWSWavelength"
    },
    {
      "service": "Bottlerocket",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "Bottlerocket",
      "nameWithPrefix": "ArchitectureServiceBottlerocket"
    },
    {
      "service": "Elastic Fabric Adapter",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "ElasticFabricAdapter",
      "nameWithPrefix": "ArchitectureServiceElasticFabricAdapter"
    },
    {
      "service": "NICE EnginFrame",
      "type": "Architecture Service",
      "categories": [
        "Compute"
      ],
      "name": "NICEEnginFrame",
      "nameWithPrefix": "ArchitectureServiceNICEEnginFrame"
    },
    {
      "type": "Category",
      "categories": [
        "Compute"
      ],
      "name": "Compute",
      "nameWithPrefix": "CategoryCompute"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2AMI",
      "nameWithPrefix": "ResourceAmazonEC2AMI"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2AutoScaling",
      "nameWithPrefix": "ResourceAmazonEC2AutoScaling"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2AWSMicroserviceExtractorforNET",
      "nameWithPrefix": "ResourceAmazonEC2AWSMicroserviceExtractorforNET"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2DBInstance",
      "nameWithPrefix": "ResourceAmazonEC2DBInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2ElasticIPAddress",
      "nameWithPrefix": "ResourceAmazonEC2ElasticIPAddress"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2Instance",
      "nameWithPrefix": "ResourceAmazonEC2Instance"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2Instances",
      "nameWithPrefix": "ResourceAmazonEC2Instances"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2InstancewithCloudWatch",
      "nameWithPrefix": "ResourceAmazonEC2InstancewithCloudWatch"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2Rescue",
      "nameWithPrefix": "ResourceAmazonEC2Rescue"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AmazonEC2SpotInstance",
      "nameWithPrefix": "ResourceAmazonEC2SpotInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AWSElasticBeanstalkApplication",
      "nameWithPrefix": "ResourceAWSElasticBeanstalkApplication"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AWSElasticBeanstalkDeployment",
      "nameWithPrefix": "ResourceAWSElasticBeanstalkDeployment"
    },
    {
      "type": "Resource",
      "categories": [
        "Compute"
      ],
      "name": "AWSLambdaLambdaFunction",
      "nameWithPrefix": "ResourceAWSLambdaLambdaFunction"
    },
    {
      "type": "Category",
      "categories": [
        "ContactCenter"
      ],
      "name": "ContactCenter",
      "nameWithPrefix": "CategoryContactCenter"
    },
    {
      "service": "Amazon ECS Anywhere",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AmazonECSAnywhere",
      "nameWithPrefix": "ArchitectureServiceAmazonECSAnywhere"
    },
    {
      "service": "Amazon EKS Anywhere",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AmazonEKSAnywhere",
      "nameWithPrefix": "ArchitectureServiceAmazonEKSAnywhere"
    },
    {
      "service": "Amazon EKS Cloud",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AmazonEKSCloud",
      "nameWithPrefix": "ArchitectureServiceAmazonEKSCloud"
    },
    {
      "service": "Amazon EKS Distro",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AmazonEKSDistro",
      "nameWithPrefix": "ArchitectureServiceAmazonEKSDistro"
    },
    {
      "service": "Amazon ECR",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerRegistry",
      "nameWithPrefix": "ArchitectureServiceAmazonElasticContainerRegistry",
      "resources": [
        "AmazonElasticContainerRegistryImage",
        "AmazonElasticContainerRegistryRegistry"
      ]
    },
    {
      "service": "Amazon ECS",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerService",
      "nameWithPrefix": "ArchitectureServiceAmazonElasticContainerService",
      "resources": [
        "AmazonElasticContainerServiceContainer1",
        "AmazonElasticContainerServiceContainer2",
        "AmazonElasticContainerServiceContainer3",
        "AmazonElasticContainerServiceCopiIoTCLI",
        "AmazonElasticContainerServiceECSServiceConnect",
        "AmazonElasticContainerServiceService",
        "AmazonElasticContainerServiceTask"
      ]
    },
    {
      "service": "Amazon EKS",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticKubernetesService",
      "nameWithPrefix": "ArchitectureServiceAmazonElasticKubernetesService",
      "resources": [
        "AmazonElasticKubernetesServiceEKSonOutposts"
      ]
    },
    {
      "service": "AWS Fargate",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "AWSFargate",
      "nameWithPrefix": "ArchitectureServiceAWSFargate"
    },
    {
      "service": "Red Hat OpenShift Serviceon AWS",
      "type": "Architecture Service",
      "categories": [
        "Containers"
      ],
      "name": "RedHatOpenShiftServiceonAWS",
      "nameWithPrefix": "ArchitectureServiceRedHatOpenShiftServiceonAWS"
    },
    {
      "type": "Category",
      "categories": [
        "Containers"
      ],
      "name": "Containers",
      "nameWithPrefix": "CategoryContainers"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerRegistryImage",
      "nameWithPrefix": "ResourceAmazonElasticContainerRegistryImage"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerRegistryRegistry",
      "nameWithPrefix": "ResourceAmazonElasticContainerRegistryRegistry"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerServiceContainer1",
      "nameWithPrefix": "ResourceAmazonElasticContainerServiceContainer1"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerServiceContainer2",
      "nameWithPrefix": "ResourceAmazonElasticContainerServiceContainer2"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerServiceContainer3",
      "nameWithPrefix": "ResourceAmazonElasticContainerServiceContainer3"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerServiceCopiIoTCLI",
      "nameWithPrefix": "ResourceAmazonElasticContainerServiceCopiIoTCLI"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerServiceECSServiceConnect",
      "nameWithPrefix": "ResourceAmazonElasticContainerServiceECSServiceConnect"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerServiceService",
      "nameWithPrefix": "ResourceAmazonElasticContainerServiceService"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticContainerServiceTask",
      "nameWithPrefix": "ResourceAmazonElasticContainerServiceTask"
    },
    {
      "type": "Resource",
      "categories": [
        "Containers"
      ],
      "name": "AmazonElasticKubernetesServiceEKSonOutposts",
      "nameWithPrefix": "ResourceAmazonElasticKubernetesServiceEKSonOutposts"
    },
    {
      "service": "AWS Activate",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSActivate",
      "nameWithPrefix": "ArchitectureServiceAWSActivate"
    },
    {
      "service": "AWS IQ",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSIQ",
      "nameWithPrefix": "ArchitectureServiceAWSIQ"
    },
    {
      "service": "AWS Managed Services",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSManagedServices",
      "nameWithPrefix": "ArchitectureServiceAWSManagedServices"
    },
    {
      "service": "AWS Professional Services",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSProfessionalServices",
      "nameWithPrefix": "ArchitectureServiceAWSProfessionalServices"
    },
    {
      "service": "AWS rePost",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSrePost",
      "nameWithPrefix": "ArchitectureServiceAWSrePost"
    },
    {
      "service": "AWS rePost Private",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSrePostPrivate",
      "nameWithPrefix": "ArchitectureServiceAWSrePostPrivate"
    },
    {
      "service": "AWS Support",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSSupport",
      "nameWithPrefix": "ArchitectureServiceAWSSupport"
    },
    {
      "service": "AWS Training Certification",
      "type": "Architecture Service",
      "categories": [
        "Customer Enablement"
      ],
      "name": "AWSTrainingCertification",
      "nameWithPrefix": "ArchitectureServiceAWSTrainingCertification"
    },
    {
      "type": "Category",
      "categories": [
        "CustomerEnablement"
      ],
      "name": "CustomerEnablement",
      "nameWithPrefix": "CategoryCustomerEnablement"
    },
    {
      "service": "AWS Database Migration Service",
      "type": "Architecture Service",
      "categories": [
        "Database",
        "DMS"
      ],
      "name": "AWSDatabaseMigrationService",
      "nameWithPrefix": "ArchitectureServiceAWSDatabaseMigrationService",
      "resources": [
        "AWSDatabaseMigrationServiceDatabasemigrationworkfloworjob"
      ]
    },
    {
      "type": "Resource",
      "categories": [
        "Database",
        "DMS"
      ],
      "name": "AWSDatabaseMigrationServiceDatabasemigrationworkfloworjob",
      "nameWithPrefix": "ResourceAWSDatabaseMigrationServiceDatabasemigrationworkfloworjob"
    },
    {
      "service": "Amazon Aurora",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonAurora",
      "nameWithPrefix": "ArchitectureServiceAmazonAurora",
      "resources": [
        "AmazonAuroraAmazonAuroraInstancealternate",
        "AmazonAuroraAmazonRDSInstance",
        "AmazonAuroraAmazonRDSInstanceAternate",
        "AmazonAuroraInstance",
        "AmazonAuroraMariaDBInstance",
        "AmazonAuroraMariaDBInstanceAlternate",
        "AmazonAuroraMySQLInstance",
        "AmazonAuroraMySQLInstanceAlternate",
        "AmazonAuroraOracleInstance",
        "AmazonAuroraOracleInstanceAlternate",
        "AmazonAuroraPIOPSInstance",
        "AmazonAuroraPostgreSQLInstance",
        "AmazonAuroraPostgreSQLInstanceAlternate",
        "AmazonAuroraSQLServerInstance",
        "AmazonAuroraSQLServerInstanceAlternate",
        "AmazonAuroraTrustedLanguageExtensionsforPostgreSQL"
      ]
    },
    {
      "service": "Amazon DocumentDB",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonDocumentDB",
      "nameWithPrefix": "ArchitectureServiceAmazonDocumentDB",
      "resources": [
        "AmazonDocumentDBElasticClusters"
      ]
    },
    {
      "service": "Amazon DynamoDB",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDB",
      "nameWithPrefix": "ArchitectureServiceAmazonDynamoDB",
      "resources": [
        "AmazonDynamoDBAmazonDynamoDBAccelerator",
        "AmazonDynamoDBAttribute",
        "AmazonDynamoDBAttributes",
        "AmazonDynamoDBGlobalsecondaryindex",
        "AmazonDynamoDBItem",
        "AmazonDynamoDBItems",
        "AmazonDynamoDBStandardAccessTableClass",
        "AmazonDynamoDBStandardInfrequentAccessTableClass",
        "AmazonDynamoDBStream",
        "AmazonDynamoDBTable"
      ]
    },
    {
      "service": "Amazon ElastiCache",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonElastiCache",
      "nameWithPrefix": "ArchitectureServiceAmazonElastiCache",
      "resources": [
        "AmazonElastiCacheCacheNode",
        "AmazonElastiCacheElastiCacheforMemcached",
        "AmazonElastiCacheElastiCacheforRedis",
        "AmazonElastiCacheElastiCacheforValkey"
      ]
    },
    {
      "service": "Amazon Keyspaces",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonKeyspaces",
      "nameWithPrefix": "ArchitectureServiceAmazonKeyspaces"
    },
    {
      "service": "Amazon MemoryDB",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonMemoryDB",
      "nameWithPrefix": "ArchitectureServiceAmazonMemoryDB"
    },
    {
      "service": "Amazon Neptune",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonNeptune",
      "nameWithPrefix": "ArchitectureServiceAmazonNeptune"
    },
    {
      "service": "Amazon Relational Database Service",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDS",
      "nameWithPrefix": "ArchitectureServiceAmazonRDS",
      "resources": [
        "AmazonRDSBlueGreenDeployments",
        "AmazonRDSMultiAZ",
        "AmazonRDSMultiAZDBCluster",
        "AmazonRDSOptimizedWrites",
        "AmazonRDSProxyInstance",
        "AmazonRDSProxyInstanceAlternate",
        "AmazonRDSTrustedLanguageExtensionsforPostgreSQL"
      ]
    },
    {
      "service": "Amazon Timestream",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "AmazonTimestream",
      "nameWithPrefix": "ArchitectureServiceAmazonTimestream"
    },
    {
      "service": "Oracle Databaseat AWS",
      "type": "Architecture Service",
      "categories": [
        "Database"
      ],
      "name": "OracleDatabaseatAWS",
      "nameWithPrefix": "ArchitectureServiceOracleDatabaseatAWS"
    },
    {
      "type": "Category",
      "categories": [
        "Database"
      ],
      "name": "Database",
      "nameWithPrefix": "CategoryDatabase"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraAmazonAuroraInstancealternate",
      "nameWithPrefix": "ResourceAmazonAuroraAmazonAuroraInstancealternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraAmazonRDSInstance",
      "nameWithPrefix": "ResourceAmazonAuroraAmazonRDSInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraAmazonRDSInstanceAternate",
      "nameWithPrefix": "ResourceAmazonAuroraAmazonRDSInstanceAternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraInstance",
      "nameWithPrefix": "ResourceAmazonAuroraInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraMariaDBInstance",
      "nameWithPrefix": "ResourceAmazonAuroraMariaDBInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraMariaDBInstanceAlternate",
      "nameWithPrefix": "ResourceAmazonAuroraMariaDBInstanceAlternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraMySQLInstance",
      "nameWithPrefix": "ResourceAmazonAuroraMySQLInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraMySQLInstanceAlternate",
      "nameWithPrefix": "ResourceAmazonAuroraMySQLInstanceAlternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraOracleInstance",
      "nameWithPrefix": "ResourceAmazonAuroraOracleInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraOracleInstanceAlternate",
      "nameWithPrefix": "ResourceAmazonAuroraOracleInstanceAlternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraPIOPSInstance",
      "nameWithPrefix": "ResourceAmazonAuroraPIOPSInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraPostgreSQLInstance",
      "nameWithPrefix": "ResourceAmazonAuroraPostgreSQLInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraPostgreSQLInstanceAlternate",
      "nameWithPrefix": "ResourceAmazonAuroraPostgreSQLInstanceAlternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraSQLServerInstance",
      "nameWithPrefix": "ResourceAmazonAuroraSQLServerInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraSQLServerInstanceAlternate",
      "nameWithPrefix": "ResourceAmazonAuroraSQLServerInstanceAlternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonAuroraTrustedLanguageExtensionsforPostgreSQL",
      "nameWithPrefix": "ResourceAmazonAuroraTrustedLanguageExtensionsforPostgreSQL"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDocumentDBElasticClusters",
      "nameWithPrefix": "ResourceAmazonDocumentDBElasticClusters"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBAmazonDynamoDBAccelerator",
      "nameWithPrefix": "ResourceAmazonDynamoDBAmazonDynamoDBAccelerator"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBAttribute",
      "nameWithPrefix": "ResourceAmazonDynamoDBAttribute"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBAttributes",
      "nameWithPrefix": "ResourceAmazonDynamoDBAttributes"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBGlobalsecondaryindex",
      "nameWithPrefix": "ResourceAmazonDynamoDBGlobalsecondaryindex"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBItem",
      "nameWithPrefix": "ResourceAmazonDynamoDBItem"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBItems",
      "nameWithPrefix": "ResourceAmazonDynamoDBItems"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBStandardAccessTableClass",
      "nameWithPrefix": "ResourceAmazonDynamoDBStandardAccessTableClass"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBStandardInfrequentAccessTableClass",
      "nameWithPrefix": "ResourceAmazonDynamoDBStandardInfrequentAccessTableClass"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBStream",
      "nameWithPrefix": "ResourceAmazonDynamoDBStream"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonDynamoDBTable",
      "nameWithPrefix": "ResourceAmazonDynamoDBTable"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonElastiCacheCacheNode",
      "nameWithPrefix": "ResourceAmazonElastiCacheCacheNode"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonElastiCacheElastiCacheforMemcached",
      "nameWithPrefix": "ResourceAmazonElastiCacheElastiCacheforMemcached"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonElastiCacheElastiCacheforRedis",
      "nameWithPrefix": "ResourceAmazonElastiCacheElastiCacheforRedis"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonElastiCacheElastiCacheforValkey",
      "nameWithPrefix": "ResourceAmazonElastiCacheElastiCacheforValkey"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDSBlueGreenDeployments",
      "nameWithPrefix": "ResourceAmazonRDSBlueGreenDeployments"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDSMultiAZ",
      "nameWithPrefix": "ResourceAmazonRDSMultiAZ"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDSMultiAZDBCluster",
      "nameWithPrefix": "ResourceAmazonRDSMultiAZDBCluster"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDSOptimizedWrites",
      "nameWithPrefix": "ResourceAmazonRDSOptimizedWrites"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDSProxyInstance",
      "nameWithPrefix": "ResourceAmazonRDSProxyInstance"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDSProxyInstanceAlternate",
      "nameWithPrefix": "ResourceAmazonRDSProxyInstanceAlternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Database"
      ],
      "name": "AmazonRDSTrustedLanguageExtensionsforPostgreSQL",
      "nameWithPrefix": "ResourceAmazonRDSTrustedLanguageExtensionsforPostgreSQL"
    },
    {
      "service": "Amazon CodeCatalyst",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AmazonCodeCatalyst",
      "nameWithPrefix": "ArchitectureServiceAmazonCodeCatalyst"
    },
    {
      "service": "Amazon Corretto",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AmazonCorretto",
      "nameWithPrefix": "ArchitectureServiceAmazonCorretto"
    },
    {
      "service": "AWS Cloud9",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCloud9",
      "nameWithPrefix": "ArchitectureServiceAWSCloud9",
      "resources": [
        "AWSCloud9Cloud9"
      ]
    },
    {
      "service": "AWS Cloud Control API",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCloudControlAPI",
      "nameWithPrefix": "ArchitectureServiceAWSCloudControlAPI"
    },
    {
      "service": "AWS Cloud Development Kit",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCloudDevelopmentKit",
      "nameWithPrefix": "ArchitectureServiceAWSCloudDevelopmentKit"
    },
    {
      "service": "AWS CloudShell",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCloudShell",
      "nameWithPrefix": "ArchitectureServiceAWSCloudShell"
    },
    {
      "service": "AWS CodeArtifact",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCodeArtifact",
      "nameWithPrefix": "ArchitectureServiceAWSCodeArtifact"
    },
    {
      "service": "AWS CodeBuild",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCodeBuild",
      "nameWithPrefix": "ArchitectureServiceAWSCodeBuild"
    },
    {
      "service": "AWS CodeCommit",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCodeCommit",
      "nameWithPrefix": "ArchitectureServiceAWSCodeCommit"
    },
    {
      "service": "AWS CodeDeploy",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCodeDeploy",
      "nameWithPrefix": "ArchitectureServiceAWSCodeDeploy"
    },
    {
      "service": "AWS CodePipeline",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCodePipeline",
      "nameWithPrefix": "ArchitectureServiceAWSCodePipeline"
    },
    {
      "service": "AWS Command Line Interface",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCommandLineInterface",
      "nameWithPrefix": "ArchitectureServiceAWSCommandLineInterface"
    },
    {
      "service": "AWS Fault Injection Service",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSFaultInjectionService",
      "nameWithPrefix": "ArchitectureServiceAWSFaultInjectionService"
    },
    {
      "service": "AWS Infrastructure Composer",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSInfrastructureComposer",
      "nameWithPrefix": "ArchitectureServiceAWSInfrastructureComposer"
    },
    {
      "service": "AWS Tools and SDKs",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSToolsandSDKs",
      "nameWithPrefix": "ArchitectureServiceAWSToolsandSDKs"
    },
    {
      "service": "AWS X-Ray",
      "type": "Architecture Service",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSXRay",
      "nameWithPrefix": "ArchitectureServiceAWSXRay"
    },
    {
      "type": "Resource",
      "categories": [
        "Developer Tools"
      ],
      "name": "AWSCloud9Cloud9",
      "nameWithPrefix": "ResourceAWSCloud9Cloud9"
    },
    {
      "type": "Category",
      "categories": [
        "DeveloperTools"
      ],
      "name": "DeveloperTools",
      "nameWithPrefix": "CategoryDeveloperTools"
    },
    {
      "service": "Amazon AppStream 2.0",
      "type": "Architecture Service",
      "categories": [
        "End User Computing"
      ],
      "name": "AmazonAppStream2",
      "nameWithPrefix": "ArchitectureServiceAmazonAppStream2"
    },
    {
      "service": "Amazon WorkSpaces Family",
      "type": "Architecture Service",
      "categories": [
        "End User Computing"
      ],
      "name": "AmazonWorkSpacesFamily",
      "nameWithPrefix": "ArchitectureServiceAmazonWorkSpacesFamily",
      "resources": [
        "AmazonWorkSpacesFamilyAmazonWorkSpaces",
        "AmazonWorkSpacesFamilyAmazonWorkSpacesCore",
        "AmazonWorkSpacesFamilyAmazonWorkSpacesSecureBrowser"
      ]
    },
    {
      "type": "Resource",
      "categories": [
        "End User Computing"
      ],
      "name": "AmazonWorkSpacesFamilyAmazonWorkSpaces",
      "nameWithPrefix": "ResourceAmazonWorkSpacesFamilyAmazonWorkSpaces"
    },
    {
      "type": "Resource",
      "categories": [
        "End User Computing"
      ],
      "name": "AmazonWorkSpacesFamilyAmazonWorkSpacesCore",
      "nameWithPrefix": "ResourceAmazonWorkSpacesFamilyAmazonWorkSpacesCore"
    },
    {
      "type": "Resource",
      "categories": [
        "End User Computing"
      ],
      "name": "AmazonWorkSpacesFamilyAmazonWorkSpacesSecureBrowser",
      "nameWithPrefix": "ResourceAmazonWorkSpacesFamilyAmazonWorkSpacesSecureBrowser"
    },
    {
      "type": "Category",
      "categories": [
        "EndUserComputing"
      ],
      "name": "EndUserComputing",
      "nameWithPrefix": "CategoryEndUserComputing"
    },
    {
      "service": "Amazon Location Service",
      "type": "Architecture Service",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AmazonLocationService",
      "nameWithPrefix": "ArchitectureServiceAmazonLocationService",
      "resources": [
        "AmazonLocationServiceGeofence",
        "AmazonLocationServiceMap",
        "AmazonLocationServicePlace",
        "AmazonLocationServiceRoutes",
        "AmazonLocationServiceTrack"
      ]
    },
    {
      "service": "AWS Amplify",
      "type": "Architecture Service",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AWSAmplify",
      "nameWithPrefix": "ArchitectureServiceAWSAmplify",
      "resources": [
        "AWSAmplifyAWSAmplifyStudio"
      ]
    },
    {
      "service": "AWS Device Farm",
      "type": "Architecture Service",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AWSDeviceFarm",
      "nameWithPrefix": "ArchitectureServiceAWSDeviceFarm"
    },
    {
      "type": "Resource",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AmazonLocationServiceGeofence",
      "nameWithPrefix": "ResourceAmazonLocationServiceGeofence"
    },
    {
      "type": "Resource",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AmazonLocationServiceMap",
      "nameWithPrefix": "ResourceAmazonLocationServiceMap"
    },
    {
      "type": "Resource",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AmazonLocationServicePlace",
      "nameWithPrefix": "ResourceAmazonLocationServicePlace"
    },
    {
      "type": "Resource",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AmazonLocationServiceRoutes",
      "nameWithPrefix": "ResourceAmazonLocationServiceRoutes"
    },
    {
      "type": "Resource",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AmazonLocationServiceTrack",
      "nameWithPrefix": "ResourceAmazonLocationServiceTrack"
    },
    {
      "type": "Resource",
      "categories": [
        "Front End Web Mobile"
      ],
      "name": "AWSAmplifyAWSAmplifyStudio",
      "nameWithPrefix": "ResourceAWSAmplifyAWSAmplifyStudio"
    },
    {
      "type": "Category",
      "categories": [
        "FrontEndWebMobile"
      ],
      "name": "FrontEndWebMobile",
      "nameWithPrefix": "CategoryFrontEndWebMobile"
    },
    {
      "service": "Amazon Game Lift",
      "type": "Architecture Service",
      "categories": [
        "Games"
      ],
      "name": "AmazonGameLift",
      "nameWithPrefix": "ArchitectureServiceAmazonGameLift"
    },
    {
      "service": "Open3DEngine",
      "type": "Architecture Service",
      "categories": [
        "Games"
      ],
      "name": "Open3DEngine",
      "nameWithPrefix": "ArchitectureServiceOpen3DEngine"
    },
    {
      "type": "Category",
      "categories": [
        "Games"
      ],
      "name": "Games",
      "nameWithPrefix": "CategoryGames"
    },
    {
      "service": "AWS Marketplace",
      "type": "Architecture Service",
      "categories": [
        "General Icons"
      ],
      "name": "AWSMarketplace",
      "nameWithPrefix": "ArchitectureServiceAWSMarketplace"
    },
    {
      "service": "AWS Marketplace Dark",
      "type": "Architecture Service",
      "categories": [
        "General Icons"
      ],
      "name": "AWSMarketplaceDark",
      "nameWithPrefix": "ArchitectureServiceAWSMarketplaceDark"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Alert",
      "nameWithPrefix": "ResourceAlert"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "AuthenticatedUser",
      "nameWithPrefix": "ResourceAuthenticatedUser"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "AWSManagementConsole",
      "nameWithPrefix": "ResourceAWSManagementConsole"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Camera",
      "nameWithPrefix": "ResourceCamera"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Chat",
      "nameWithPrefix": "ResourceChat"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Client",
      "nameWithPrefix": "ResourceClient"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "ColdStorage",
      "nameWithPrefix": "ResourceColdStorage"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Credentials",
      "nameWithPrefix": "ResourceCredentials"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Database",
      "nameWithPrefix": "ResourceDatabase"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "DataStream",
      "nameWithPrefix": "ResourceDataStream"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "DataTable",
      "nameWithPrefix": "ResourceDataTable"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Disk",
      "nameWithPrefix": "ResourceDisk"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Document",
      "nameWithPrefix": "ResourceDocument"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Documents",
      "nameWithPrefix": "ResourceDocuments"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Email",
      "nameWithPrefix": "ResourceEmail"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Firewall",
      "nameWithPrefix": "ResourceFirewall"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Folder",
      "nameWithPrefix": "ResourceFolder"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Folders",
      "nameWithPrefix": "ResourceFolders"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Forums",
      "nameWithPrefix": "ResourceForums"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Gear",
      "nameWithPrefix": "ResourceGear"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "GenericApplication",
      "nameWithPrefix": "ResourceGenericApplication"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "GitRepository",
      "nameWithPrefix": "ResourceGitRepository"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Globe",
      "nameWithPrefix": "ResourceGlobe"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Internet",
      "nameWithPrefix": "ResourceInternet"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Internetalt1",
      "nameWithPrefix": "ResourceInternetalt1"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Internetalt2",
      "nameWithPrefix": "ResourceInternetalt2"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "JSONScript",
      "nameWithPrefix": "ResourceJSONScript"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Logs",
      "nameWithPrefix": "ResourceLogs"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "MagnifyingGlass",
      "nameWithPrefix": "ResourceMagnifyingGlass"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Metrics",
      "nameWithPrefix": "ResourceMetrics"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Mobileclient",
      "nameWithPrefix": "ResourceMobileclient"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Multimedia",
      "nameWithPrefix": "ResourceMultimedia"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Officebuilding",
      "nameWithPrefix": "ResourceOfficebuilding"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "ProgrammingLanguage",
      "nameWithPrefix": "ResourceProgrammingLanguage"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Question",
      "nameWithPrefix": "ResourceQuestion"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Recover",
      "nameWithPrefix": "ResourceRecover"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "SAMLtoken",
      "nameWithPrefix": "ResourceSAMLtoken"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "SDK",
      "nameWithPrefix": "ResourceSDK"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Server",
      "nameWithPrefix": "ResourceServer"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Servers",
      "nameWithPrefix": "ResourceServers"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Shield",
      "nameWithPrefix": "ResourceShield"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "SourceCode",
      "nameWithPrefix": "ResourceSourceCode"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "SSLpadlock",
      "nameWithPrefix": "ResourceSSLpadlock"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Tapestorage",
      "nameWithPrefix": "ResourceTapestorage"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Toolkit",
      "nameWithPrefix": "ResourceToolkit"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "User",
      "nameWithPrefix": "ResourceUser"
    },
    {
      "type": "Resource",
      "categories": [
        "General Icons"
      ],
      "name": "Users",
      "nameWithPrefix": "ResourceUsers"
    },
    {
      "service": "AWS IoT Analytics",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTAnalytics",
      "nameWithPrefix": "ArchitectureServiceAWSIoTAnalytics",
      "resources": [
        "AWSIoTAnalyticsChannel",
        "AWSIoTAnalyticsDataset",
        "AWSIoTAnalyticsDataStore",
        "AWSIoTAnalyticsNotebook",
        "AWSIoTAnalyticsPipeline"
      ]
    },
    {
      "service": "AWS IoT Button",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTButton",
      "nameWithPrefix": "ArchitectureServiceAWSIoTButton"
    },
    {
      "service": "AWS IoT Core",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTCore",
      "nameWithPrefix": "ArchitectureServiceAWSIoTCore",
      "resources": [
        "AWSIoTCoreDeviceAdvisor",
        "AWSIoTCoreDeviceLocation"
      ]
    },
    {
      "service": "AWS IoT Device Defender",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTDeviceDefender",
      "nameWithPrefix": "ArchitectureServiceAWSIoTDeviceDefender",
      "resources": [
        "AWSIoTDeviceDefenderIoTDeviceJobs"
      ]
    },
    {
      "service": "AWS IoT Device Management",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTDeviceManagement",
      "nameWithPrefix": "ArchitectureServiceAWSIoTDeviceManagement",
      "resources": [
        "AWSIoTDeviceManagementFleetHub"
      ]
    },
    {
      "service": "AWS IoT Events",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTEvents",
      "nameWithPrefix": "ArchitectureServiceAWSIoTEvents"
    },
    {
      "service": "AWS IoT ExpressLink",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTExpressLink",
      "nameWithPrefix": "ArchitectureServiceAWSIoTExpressLink"
    },
    {
      "service": "AWS IoT FleetWise",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTFleetWise",
      "nameWithPrefix": "ArchitectureServiceAWSIoTFleetWise"
    },
    {
      "service": "AWS IoT Greengrass",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTGreengrass",
      "nameWithPrefix": "ArchitectureServiceAWSIoTGreengrass",
      "resources": [
        "AWSIoTGreengrassArtifact",
        "AWSIoTGreengrassComponent",
        "AWSIoTGreengrassComponentMachineLearning",
        "AWSIoTGreengrassComponentNucleus",
        "AWSIoTGreengrassComponentPrivate",
        "AWSIoTGreengrassComponentPublic",
        "AWSIoTGreengrassConnector",
        "AWSIoTGreengrassInterprocessCommunication",
        "AWSIoTGreengrassProtocol",
        "AWSIoTGreengrassRecipe",
        "AWSIoTGreengrassStreamManager"
      ]
    },
    {
      "service": "AWS IoT SiteWise",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTSiteWise",
      "nameWithPrefix": "ArchitectureServiceAWSIoTSiteWise",
      "resources": [
        "AWSIoTSiteWiseAsset",
        "AWSIoTSiteWiseAssetHierarchy",
        "AWSIoTSiteWiseAssetModel",
        "AWSIoTSiteWiseAssetProperties",
        "AWSIoTSiteWiseDataStreams"
      ]
    },
    {
      "service": "AWS IoT TwinMaker",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "AWSIoTTwinMaker",
      "nameWithPrefix": "ArchitectureServiceAWSIoTTwinMaker"
    },
    {
      "service": "Free RTOS",
      "type": "Architecture Service",
      "categories": [
        "Internet of Things",
        "IoT"
      ],
      "name": "FreeRTOS",
      "nameWithPrefix": "ArchitectureServiceFreeRTOS"
    },
    {
      "type": "Category",
      "categories": [
        "InternetofThings"
      ],
      "name": "InternetofThings",
      "nameWithPrefix": "CategoryInternetofThings"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAction",
      "nameWithPrefix": "ResourceAWSIoTAction"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTActuator",
      "nameWithPrefix": "ResourceAWSIoTActuator"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAlexaEnabledDevice",
      "nameWithPrefix": "ResourceAWSIoTAlexaEnabledDevice"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAlexaSkill",
      "nameWithPrefix": "ResourceAWSIoTAlexaSkill"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAlexaVoiceService",
      "nameWithPrefix": "ResourceAWSIoTAlexaVoiceService"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAnalyticsChannel",
      "nameWithPrefix": "ResourceAWSIoTAnalyticsChannel"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAnalyticsDataset",
      "nameWithPrefix": "ResourceAWSIoTAnalyticsDataset"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAnalyticsDataStore",
      "nameWithPrefix": "ResourceAWSIoTAnalyticsDataStore"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAnalyticsNotebook",
      "nameWithPrefix": "ResourceAWSIoTAnalyticsNotebook"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTAnalyticsPipeline",
      "nameWithPrefix": "ResourceAWSIoTAnalyticsPipeline"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTCertificate",
      "nameWithPrefix": "ResourceAWSIoTCertificate"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTCoreDeviceAdvisor",
      "nameWithPrefix": "ResourceAWSIoTCoreDeviceAdvisor"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTCoreDeviceLocation",
      "nameWithPrefix": "ResourceAWSIoTCoreDeviceLocation"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTDesiredState",
      "nameWithPrefix": "ResourceAWSIoTDesiredState"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTDeviceDefenderIoTDeviceJobs",
      "nameWithPrefix": "ResourceAWSIoTDeviceDefenderIoTDeviceJobs"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTDeviceGateway",
      "nameWithPrefix": "ResourceAWSIoTDeviceGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTDeviceManagementFleetHub",
      "nameWithPrefix": "ResourceAWSIoTDeviceManagementFleetHub"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTDeviceTester",
      "nameWithPrefix": "ResourceAWSIoTDeviceTester"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTEcho",
      "nameWithPrefix": "ResourceAWSIoTEcho"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTFireTV",
      "nameWithPrefix": "ResourceAWSIoTFireTV"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTFireTVStick",
      "nameWithPrefix": "ResourceAWSIoTFireTVStick"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassArtifact",
      "nameWithPrefix": "ResourceAWSIoTGreengrassArtifact"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassComponent",
      "nameWithPrefix": "ResourceAWSIoTGreengrassComponent"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassComponentMachineLearning",
      "nameWithPrefix": "ResourceAWSIoTGreengrassComponentMachineLearning"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassComponentNucleus",
      "nameWithPrefix": "ResourceAWSIoTGreengrassComponentNucleus"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassComponentPrivate",
      "nameWithPrefix": "ResourceAWSIoTGreengrassComponentPrivate"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassComponentPublic",
      "nameWithPrefix": "ResourceAWSIoTGreengrassComponentPublic"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassConnector",
      "nameWithPrefix": "ResourceAWSIoTGreengrassConnector"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassInterprocessCommunication",
      "nameWithPrefix": "ResourceAWSIoTGreengrassInterprocessCommunication"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassProtocol",
      "nameWithPrefix": "ResourceAWSIoTGreengrassProtocol"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassRecipe",
      "nameWithPrefix": "ResourceAWSIoTGreengrassRecipe"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTGreengrassStreamManager",
      "nameWithPrefix": "ResourceAWSIoTGreengrassStreamManager"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTHardwareBoard",
      "nameWithPrefix": "ResourceAWSIoTHardwareBoard"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTHTTP2Protocol",
      "nameWithPrefix": "ResourceAWSIoTHTTP2Protocol"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTHTTPProtocol",
      "nameWithPrefix": "ResourceAWSIoTHTTPProtocol"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTLambdaFunction",
      "nameWithPrefix": "ResourceAWSIoTLambdaFunction"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTLoRaWANProtocol",
      "nameWithPrefix": "ResourceAWSIoTLoRaWANProtocol"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTMQTTProtocol",
      "nameWithPrefix": "ResourceAWSIoTMQTTProtocol"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTOverAirUpdate",
      "nameWithPrefix": "ResourceAWSIoTOverAirUpdate"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTPolicy",
      "nameWithPrefix": "ResourceAWSIoTPolicy"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTReportedState",
      "nameWithPrefix": "ResourceAWSIoTReportedState"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTRule",
      "nameWithPrefix": "ResourceAWSIoTRule"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSailboat",
      "nameWithPrefix": "ResourceAWSIoTSailboat"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSensor",
      "nameWithPrefix": "ResourceAWSIoTSensor"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTServo",
      "nameWithPrefix": "ResourceAWSIoTServo"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTShadow",
      "nameWithPrefix": "ResourceAWSIoTShadow"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSimulator",
      "nameWithPrefix": "ResourceAWSIoTSimulator"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSiteWiseAsset",
      "nameWithPrefix": "ResourceAWSIoTSiteWiseAsset"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSiteWiseAssetHierarchy",
      "nameWithPrefix": "ResourceAWSIoTSiteWiseAssetHierarchy"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSiteWiseAssetModel",
      "nameWithPrefix": "ResourceAWSIoTSiteWiseAssetModel"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSiteWiseAssetProperties",
      "nameWithPrefix": "ResourceAWSIoTSiteWiseAssetProperties"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTSiteWiseDataStreams",
      "nameWithPrefix": "ResourceAWSIoTSiteWiseDataStreams"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingBank",
      "nameWithPrefix": "ResourceAWSIoTThingBank"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingBicycle",
      "nameWithPrefix": "ResourceAWSIoTThingBicycle"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingbulb",
      "nameWithPrefix": "ResourceAWSIoTThingbulb"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingCamera",
      "nameWithPrefix": "ResourceAWSIoTThingCamera"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingCar",
      "nameWithPrefix": "ResourceAWSIoTThingCar"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingCart",
      "nameWithPrefix": "ResourceAWSIoTThingCart"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingCoffeePot",
      "nameWithPrefix": "ResourceAWSIoTThingCoffeePot"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingDoorLock",
      "nameWithPrefix": "ResourceAWSIoTThingDoorLock"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingFactory",
      "nameWithPrefix": "ResourceAWSIoTThingFactory"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingFreeRTOSDevice",
      "nameWithPrefix": "ResourceAWSIoTThingFreeRTOSDevice"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingGeneric",
      "nameWithPrefix": "ResourceAWSIoTThingGeneric"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingHouse",
      "nameWithPrefix": "ResourceAWSIoTThingHouse"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingHumiditySensor",
      "nameWithPrefix": "ResourceAWSIoTThingHumiditySensor"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingIndustrialPC",
      "nameWithPrefix": "ResourceAWSIoTThingIndustrialPC"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingMedicalEmergency",
      "nameWithPrefix": "ResourceAWSIoTThingMedicalEmergency"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingPLC",
      "nameWithPrefix": "ResourceAWSIoTThingPLC"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingPoliceEmergency",
      "nameWithPrefix": "ResourceAWSIoTThingPoliceEmergency"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingRelay",
      "nameWithPrefix": "ResourceAWSIoTThingRelay"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingStacklight",
      "nameWithPrefix": "ResourceAWSIoTThingStacklight"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingTemperatureHumiditySensor",
      "nameWithPrefix": "ResourceAWSIoTThingTemperatureHumiditySensor"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingTemperatureSensor",
      "nameWithPrefix": "ResourceAWSIoTThingTemperatureSensor"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingTemperatureVibrationSensor",
      "nameWithPrefix": "ResourceAWSIoTThingTemperatureVibrationSensor"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingThermostat",
      "nameWithPrefix": "ResourceAWSIoTThingThermostat"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingTravel",
      "nameWithPrefix": "ResourceAWSIoTThingTravel"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingUtility",
      "nameWithPrefix": "ResourceAWSIoTThingUtility"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingVibrationSensor",
      "nameWithPrefix": "ResourceAWSIoTThingVibrationSensor"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTThingWindfarm",
      "nameWithPrefix": "ResourceAWSIoTThingWindfarm"
    },
    {
      "type": "Resource",
      "categories": [
        "IoT"
      ],
      "name": "AWSIoTTopic",
      "nameWithPrefix": "ResourceAWSIoTTopic"
    },
    {
      "service": "Amazon CloudWatch",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatch",
      "nameWithPrefix": "ArchitectureServiceAmazonCloudWatch",
      "resources": [
        "AmazonCloudWatchAlarm",
        "AmazonCloudWatchCrossaccountObservability",
        "AmazonCloudWatchDataProtection",
        "AmazonCloudWatchEventEventBased",
        "AmazonCloudWatchEventTimeBased",
        "AmazonCloudWatchEvidently",
        "AmazonCloudWatchLogs",
        "AmazonCloudWatchMetricsInsights",
        "AmazonCloudWatchRule",
        "AmazonCloudWatchRUM",
        "AmazonCloudWatchSynthetics"
      ]
    },
    {
      "service": "Amazon Managed Grafana",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonManagedGrafana",
      "nameWithPrefix": "ArchitectureServiceAmazonManagedGrafana"
    },
    {
      "service": "Amazon Managed Service for Prometheus",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonManagedServiceforPrometheus",
      "nameWithPrefix": "ArchitectureServiceAmazonManagedServiceforPrometheus"
    },
    {
      "service": "AWS AppConfig",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSAppConfig",
      "nameWithPrefix": "ArchitectureServiceAWSAppConfig"
    },
    {
      "service": "AWS Application Auto Scaling",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSApplicationAutoScaling",
      "nameWithPrefix": "ArchitectureServiceAWSApplicationAutoScaling"
    },
    {
      "service": "AWS Auto Scaling",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSAutoScaling",
      "nameWithPrefix": "ArchitectureServiceAWSAutoScaling"
    },
    {
      "service": "AWS Backint Agent",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSBackintAgent",
      "nameWithPrefix": "ArchitectureServiceAWSBackintAgent"
    },
    {
      "service": "AWS Chatbot",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSChatbot",
      "nameWithPrefix": "ArchitectureServiceAWSChatbot"
    },
    {
      "service": "AWS CloudFormation",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSCloudFormation",
      "nameWithPrefix": "ArchitectureServiceAWSCloudFormation",
      "resources": [
        "AWSCloudFormationChangeSet",
        "AWSCloudFormationStack",
        "AWSCloudFormationTemplate"
      ]
    },
    {
      "service": "AWS CloudTrail",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSCloudTrail",
      "nameWithPrefix": "ArchitectureServiceAWSCloudTrail",
      "resources": [
        "AWSCloudTrailCloudTrailLake"
      ]
    },
    {
      "service": "AWS Compute Optimizer",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSComputeOptimizer",
      "nameWithPrefix": "ArchitectureServiceAWSComputeOptimizer"
    },
    {
      "service": "AWS Config",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSConfig",
      "nameWithPrefix": "ArchitectureServiceAWSConfig"
    },
    {
      "service": "AWS Console Mobile Application",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSConsoleMobileApplication",
      "nameWithPrefix": "ArchitectureServiceAWSConsoleMobileApplication"
    },
    {
      "service": "AWS Control Tower",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSControlTower",
      "nameWithPrefix": "ArchitectureServiceAWSControlTower"
    },
    {
      "service": "AWS Distro for Open Telemetry",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSDistroforOpenTelemetry",
      "nameWithPrefix": "ArchitectureServiceAWSDistroforOpenTelemetry"
    },
    {
      "service": "AWS Health Dashboard",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSHealthDashboard",
      "nameWithPrefix": "ArchitectureServiceAWSHealthDashboard"
    },
    {
      "service": "AWS Launch Wizard",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSLaunchWizard",
      "nameWithPrefix": "ArchitectureServiceAWSLaunchWizard"
    },
    {
      "service": "AWS License Manager",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSLicenseManager",
      "nameWithPrefix": "ArchitectureServiceAWSLicenseManager",
      "resources": [
        "AWSLicenseManagerApplicationDiscovery",
        "AWSLicenseManagerLicenseBlending"
      ]
    },
    {
      "service": "AWS Management Console",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSManagementConsole",
      "nameWithPrefix": "ArchitectureServiceAWSManagementConsole",
      "resources": [
        "AWSManagementConsole"
      ]
    },
    {
      "service": "AWS Organizations",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSOrganizations",
      "nameWithPrefix": "ArchitectureServiceAWSOrganizations",
      "resources": [
        "AWSOrganizationsAccount",
        "AWSOrganizationsManagementAccount",
        "AWSOrganizationsOrganizationalUnit"
      ]
    },
    {
      "service": "AWS Proton",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSProton",
      "nameWithPrefix": "ArchitectureServiceAWSProton"
    },
    {
      "service": "AWS Resilience Hub",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSResilienceHub",
      "nameWithPrefix": "ArchitectureServiceAWSResilienceHub"
    },
    {
      "service": "AWS Resource Explorer",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSResourceExplorer",
      "nameWithPrefix": "ArchitectureServiceAWSResourceExplorer"
    },
    {
      "service": "AWS Service Catalog",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSServiceCatalog",
      "nameWithPrefix": "ArchitectureServiceAWSServiceCatalog"
    },
    {
      "service": "AWS Service Management Connector",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSServiceManagementConnector",
      "nameWithPrefix": "ArchitectureServiceAWSServiceManagementConnector"
    },
    {
      "service": "AWS Systems Manager",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManager",
      "nameWithPrefix": "ArchitectureServiceAWSSystemsManager",
      "resources": [
        "AWSSystemsManagerApplicationManager",
        "AWSSystemsManagerAutomation",
        "AWSSystemsManagerChangeCalendar",
        "AWSSystemsManagerChangeManager",
        "AWSSystemsManagerCompliance",
        "AWSSystemsManagerDistributor",
        "AWSSystemsManagerDocuments",
        "AWSSystemsManagerIncidentManager",
        "AWSSystemsManagerInventory",
        "AWSSystemsManagerMaintenanceWindows",
        "AWSSystemsManagerOpsCenter",
        "AWSSystemsManagerParameterStore",
        "AWSSystemsManagerPatchManager",
        "AWSSystemsManagerRunCommand",
        "AWSSystemsManagerSessionManager",
        "AWSSystemsManagerStateManager"
      ]
    },
    {
      "service": "AWS Telco Network Builder",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSTelcoNetworkBuilder",
      "nameWithPrefix": "ArchitectureServiceAWSTelcoNetworkBuilder"
    },
    {
      "service": "AWS Trusted Advisor",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSTrustedAdvisor",
      "nameWithPrefix": "ArchitectureServiceAWSTrustedAdvisor",
      "resources": [
        "AWSTrustedAdvisorChecklist",
        "AWSTrustedAdvisorChecklistCost",
        "AWSTrustedAdvisorChecklistFaultTolerant",
        "AWSTrustedAdvisorChecklistPerformance",
        "AWSTrustedAdvisorChecklistSecurity"
      ]
    },
    {
      "service": "AWS User Notifications",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSUserNotifications",
      "nameWithPrefix": "ArchitectureServiceAWSUserNotifications"
    },
    {
      "service": "AWS Well Architected Tool",
      "type": "Architecture Service",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSWellArchitectedTool",
      "nameWithPrefix": "ArchitectureServiceAWSWellArchitectedTool"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchAlarm",
      "nameWithPrefix": "ResourceAmazonCloudWatchAlarm"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchCrossaccountObservability",
      "nameWithPrefix": "ResourceAmazonCloudWatchCrossaccountObservability"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchDataProtection",
      "nameWithPrefix": "ResourceAmazonCloudWatchDataProtection"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchEventEventBased",
      "nameWithPrefix": "ResourceAmazonCloudWatchEventEventBased"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchEventTimeBased",
      "nameWithPrefix": "ResourceAmazonCloudWatchEventTimeBased"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchEvidently",
      "nameWithPrefix": "ResourceAmazonCloudWatchEvidently"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchLogs",
      "nameWithPrefix": "ResourceAmazonCloudWatchLogs"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchMetricsInsights",
      "nameWithPrefix": "ResourceAmazonCloudWatchMetricsInsights"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchRule",
      "nameWithPrefix": "ResourceAmazonCloudWatchRule"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchRUM",
      "nameWithPrefix": "ResourceAmazonCloudWatchRUM"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AmazonCloudWatchSynthetics",
      "nameWithPrefix": "ResourceAmazonCloudWatchSynthetics"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSCloudFormationChangeSet",
      "nameWithPrefix": "ResourceAWSCloudFormationChangeSet"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSCloudFormationStack",
      "nameWithPrefix": "ResourceAWSCloudFormationStack"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSCloudFormationTemplate",
      "nameWithPrefix": "ResourceAWSCloudFormationTemplate"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSCloudTrailCloudTrailLake",
      "nameWithPrefix": "ResourceAWSCloudTrailCloudTrailLake"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSLicenseManagerApplicationDiscovery",
      "nameWithPrefix": "ResourceAWSLicenseManagerApplicationDiscovery"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSLicenseManagerLicenseBlending",
      "nameWithPrefix": "ResourceAWSLicenseManagerLicenseBlending"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSOrganizationsAccount",
      "nameWithPrefix": "ResourceAWSOrganizationsAccount"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSOrganizationsManagementAccount",
      "nameWithPrefix": "ResourceAWSOrganizationsManagementAccount"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSOrganizationsOrganizationalUnit",
      "nameWithPrefix": "ResourceAWSOrganizationsOrganizationalUnit"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerApplicationManager",
      "nameWithPrefix": "ResourceAWSSystemsManagerApplicationManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerAutomation",
      "nameWithPrefix": "ResourceAWSSystemsManagerAutomation"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerChangeCalendar",
      "nameWithPrefix": "ResourceAWSSystemsManagerChangeCalendar"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerChangeManager",
      "nameWithPrefix": "ResourceAWSSystemsManagerChangeManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerCompliance",
      "nameWithPrefix": "ResourceAWSSystemsManagerCompliance"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerDistributor",
      "nameWithPrefix": "ResourceAWSSystemsManagerDistributor"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerDocuments",
      "nameWithPrefix": "ResourceAWSSystemsManagerDocuments"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerIncidentManager",
      "nameWithPrefix": "ResourceAWSSystemsManagerIncidentManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerInventory",
      "nameWithPrefix": "ResourceAWSSystemsManagerInventory"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerMaintenanceWindows",
      "nameWithPrefix": "ResourceAWSSystemsManagerMaintenanceWindows"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerOpsCenter",
      "nameWithPrefix": "ResourceAWSSystemsManagerOpsCenter"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerParameterStore",
      "nameWithPrefix": "ResourceAWSSystemsManagerParameterStore"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerPatchManager",
      "nameWithPrefix": "ResourceAWSSystemsManagerPatchManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerRunCommand",
      "nameWithPrefix": "ResourceAWSSystemsManagerRunCommand"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerSessionManager",
      "nameWithPrefix": "ResourceAWSSystemsManagerSessionManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSSystemsManagerStateManager",
      "nameWithPrefix": "ResourceAWSSystemsManagerStateManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSTrustedAdvisorChecklist",
      "nameWithPrefix": "ResourceAWSTrustedAdvisorChecklist"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSTrustedAdvisorChecklistCost",
      "nameWithPrefix": "ResourceAWSTrustedAdvisorChecklistCost"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSTrustedAdvisorChecklistFaultTolerant",
      "nameWithPrefix": "ResourceAWSTrustedAdvisorChecklistFaultTolerant"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSTrustedAdvisorChecklistPerformance",
      "nameWithPrefix": "ResourceAWSTrustedAdvisorChecklistPerformance"
    },
    {
      "type": "Resource",
      "categories": [
        "Management Governance"
      ],
      "name": "AWSTrustedAdvisorChecklistSecurity",
      "nameWithPrefix": "ResourceAWSTrustedAdvisorChecklistSecurity"
    },
    {
      "type": "Category",
      "categories": [
        "ManagementGovernance"
      ],
      "name": "ManagementGovernance",
      "nameWithPrefix": "CategoryManagementGovernance"
    },
    {
      "service": "Amazon Elastic Transcoder",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AmazonElasticTranscoder",
      "nameWithPrefix": "ArchitectureServiceAmazonElasticTranscoder"
    },
    {
      "service": "Amazon Interactive Video Service",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AmazonInteractiveVideoService",
      "nameWithPrefix": "ArchitectureServiceAmazonInteractiveVideoService"
    },
    {
      "service": "Amazon Kinesis Video Streams",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AmazonKinesisVideoStreams",
      "nameWithPrefix": "ArchitectureServiceAmazonKinesisVideoStreams"
    },
    {
      "service": "AWS Deadline Cloud",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSDeadlineCloud",
      "nameWithPrefix": "ArchitectureServiceAWSDeadlineCloud"
    },
    {
      "service": "AWS Elemental Appliances Software",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalAppliancesSoftware",
      "nameWithPrefix": "ArchitectureServiceAWSElementalAppliancesSoftware"
    },
    {
      "service": "AWS Elemental Conductor",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalConductor",
      "nameWithPrefix": "ArchitectureServiceAWSElementalConductor"
    },
    {
      "service": "AWS Elemental Delta",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalDelta",
      "nameWithPrefix": "ArchitectureServiceAWSElementalDelta"
    },
    {
      "service": "AWS Elemental Link",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalLink",
      "nameWithPrefix": "ArchitectureServiceAWSElementalLink"
    },
    {
      "service": "AWS Elemental Live",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalLive",
      "nameWithPrefix": "ArchitectureServiceAWSElementalLive"
    },
    {
      "service": "AWS Elemental MediaConnect",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalMediaConnect",
      "nameWithPrefix": "ArchitectureServiceAWSElementalMediaConnect",
      "resources": [
        "AWSElementalMediaConnectMediaConnectGateway"
      ]
    },
    {
      "service": "AWS Elemental MediaConvert",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalMediaConvert",
      "nameWithPrefix": "ArchitectureServiceAWSElementalMediaConvert"
    },
    {
      "service": "AWS Elemental MediaLive",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalMediaLive",
      "nameWithPrefix": "ArchitectureServiceAWSElementalMediaLive"
    },
    {
      "service": "AWS Elemental MediaPackage",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalMediaPackage",
      "nameWithPrefix": "ArchitectureServiceAWSElementalMediaPackage"
    },
    {
      "service": "AWS Elemental MediaStore",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalMediaStore",
      "nameWithPrefix": "ArchitectureServiceAWSElementalMediaStore"
    },
    {
      "service": "AWS Elemental MediaTailor",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalMediaTailor",
      "nameWithPrefix": "ArchitectureServiceAWSElementalMediaTailor"
    },
    {
      "service": "AWS Elemental Server",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalServer",
      "nameWithPrefix": "ArchitectureServiceAWSElementalServer"
    },
    {
      "service": "AWS Thinkbox Deadline",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSThinkboxDeadline",
      "nameWithPrefix": "ArchitectureServiceAWSThinkboxDeadline"
    },
    {
      "service": "AWS Thinkbox Frost",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSThinkboxFrost",
      "nameWithPrefix": "ArchitectureServiceAWSThinkboxFrost"
    },
    {
      "service": "AWS Thinkbox Krakatoa",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSThinkboxKrakatoa",
      "nameWithPrefix": "ArchitectureServiceAWSThinkboxKrakatoa"
    },
    {
      "service": "AWS Thinkbox Sequoia",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSThinkboxSequoia",
      "nameWithPrefix": "ArchitectureServiceAWSThinkboxSequoia"
    },
    {
      "service": "AWS Thinkbox Stoke",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSThinkboxStoke",
      "nameWithPrefix": "ArchitectureServiceAWSThinkboxStoke"
    },
    {
      "service": "AWS Thinkbox XMesh",
      "type": "Architecture Service",
      "categories": [
        "Media Services"
      ],
      "name": "AWSThinkboxXMesh",
      "nameWithPrefix": "ArchitectureServiceAWSThinkboxXMesh"
    },
    {
      "type": "Resource",
      "categories": [
        "Media Services"
      ],
      "name": "AWSCloudDigitalInterface",
      "nameWithPrefix": "ResourceAWSCloudDigitalInterface"
    },
    {
      "type": "Resource",
      "categories": [
        "Media Services"
      ],
      "name": "AWSElementalMediaConnectMediaConnectGateway",
      "nameWithPrefix": "ResourceAWSElementalMediaConnectMediaConnectGateway"
    },
    {
      "type": "Category",
      "categories": [
        "MediaServices"
      ],
      "name": "MediaServices",
      "nameWithPrefix": "CategoryMediaServices"
    },
    {
      "service": "Amazon Elastic VMware Service",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AmazonElasticVMwareService",
      "nameWithPrefix": "ArchitectureServiceAmazonElasticVMwareService"
    },
    {
      "service": "AWS Application Discovery Service",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSApplicationDiscoveryService",
      "nameWithPrefix": "ArchitectureServiceAWSApplicationDiscoveryService",
      "resources": [
        "AWSApplicationDiscoveryServiceAWSAgentlessCollector",
        "AWSApplicationDiscoveryServiceAWSDiscoveryAgent",
        "AWSApplicationDiscoveryServiceMigrationEvaluatorCollector"
      ]
    },
    {
      "service": "AWS Application Migration Service",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSApplicationMigrationService",
      "nameWithPrefix": "ArchitectureServiceAWSApplicationMigrationService"
    },
    {
      "service": "AWS DataSync",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSDataSync",
      "nameWithPrefix": "ArchitectureServiceAWSDataSync",
      "resources": [
        "AWSDataSyncDiscovery"
      ]
    },
    {
      "service": "AWS Data Transfer Terminal",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSDataTransferTerminal",
      "nameWithPrefix": "ArchitectureServiceAWSDataTransferTerminal"
    },
    {
      "service": "AWS Mainframe Modernization",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMainframeModernization",
      "nameWithPrefix": "ArchitectureServiceAWSMainframeModernization",
      "resources": [
        "AWSMainframeModernizationAnalyzer",
        "AWSMainframeModernizationCompiler",
        "AWSMainframeModernizationConverter",
        "AWSMainframeModernizationDeveloper",
        "AWSMainframeModernizationRuntime"
      ]
    },
    {
      "service": "AWS Migration Evaluator",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMigrationEvaluator",
      "nameWithPrefix": "ArchitectureServiceAWSMigrationEvaluator"
    },
    {
      "service": "AWS Migration Hub",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMigrationHub",
      "nameWithPrefix": "ArchitectureServiceAWSMigrationHub",
      "resources": [
        "AWSMigrationHubRefactorSpacesApplications",
        "AWSMigrationHubRefactorSpacesEnvironments",
        "AWSMigrationHubRefactorSpacesServices"
      ]
    },
    {
      "service": "AWS Transfer Family",
      "type": "Architecture Service",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSTransferFamily",
      "nameWithPrefix": "ArchitectureServiceAWSTransferFamily",
      "resources": [
        "AWSTransferFamilyAWSAS2",
        "AWSTransferFamilyAWSFTP",
        "AWSTransferFamilyAWSFTPS",
        "AWSTransferFamilyAWSSFTP"
      ]
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSApplicationDiscoveryServiceAWSAgentlessCollector",
      "nameWithPrefix": "ResourceAWSApplicationDiscoveryServiceAWSAgentlessCollector"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSApplicationDiscoveryServiceAWSDiscoveryAgent",
      "nameWithPrefix": "ResourceAWSApplicationDiscoveryServiceAWSDiscoveryAgent"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSApplicationDiscoveryServiceMigrationEvaluatorCollector",
      "nameWithPrefix": "ResourceAWSApplicationDiscoveryServiceMigrationEvaluatorCollector"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSDatasyncAgent",
      "nameWithPrefix": "ResourceAWSDatasyncAgent"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSDataSyncDiscovery",
      "nameWithPrefix": "ResourceAWSDataSyncDiscovery"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMainframeModernizationAnalyzer",
      "nameWithPrefix": "ResourceAWSMainframeModernizationAnalyzer"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMainframeModernizationCompiler",
      "nameWithPrefix": "ResourceAWSMainframeModernizationCompiler"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMainframeModernizationConverter",
      "nameWithPrefix": "ResourceAWSMainframeModernizationConverter"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMainframeModernizationDeveloper",
      "nameWithPrefix": "ResourceAWSMainframeModernizationDeveloper"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMainframeModernizationRuntime",
      "nameWithPrefix": "ResourceAWSMainframeModernizationRuntime"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMigrationHubRefactorSpacesApplications",
      "nameWithPrefix": "ResourceAWSMigrationHubRefactorSpacesApplications"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMigrationHubRefactorSpacesEnvironments",
      "nameWithPrefix": "ResourceAWSMigrationHubRefactorSpacesEnvironments"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSMigrationHubRefactorSpacesServices",
      "nameWithPrefix": "ResourceAWSMigrationHubRefactorSpacesServices"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSTransferFamilyAWSAS2",
      "nameWithPrefix": "ResourceAWSTransferFamilyAWSAS2"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSTransferFamilyAWSFTP",
      "nameWithPrefix": "ResourceAWSTransferFamilyAWSFTP"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSTransferFamilyAWSFTPS",
      "nameWithPrefix": "ResourceAWSTransferFamilyAWSFTPS"
    },
    {
      "type": "Resource",
      "categories": [
        "Migration Modernization"
      ],
      "name": "AWSTransferFamilyAWSSFTP",
      "nameWithPrefix": "ResourceAWSTransferFamilyAWSSFTP"
    },
    {
      "type": "Category",
      "categories": [
        "MigrationModernization"
      ],
      "name": "MigrationModernization",
      "nameWithPrefix": "CategoryMigrationModernization"
    },
    {
      "service": "Amazon API Gateway",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonAPIGateway",
      "nameWithPrefix": "ArchitectureServiceAmazonAPIGateway",
      "resources": [
        "AmazonAPIGatewayEndpoint"
      ]
    },
    {
      "service": "Amazon Application Recovery Controller",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonApplicationRecoveryController",
      "nameWithPrefix": "ArchitectureServiceAmazonApplicationRecoveryController"
    },
    {
      "service": "Amazon CloudFront",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonCloudFront",
      "nameWithPrefix": "ArchitectureServiceAmazonCloudFront",
      "resources": [
        "AmazonCloudFrontDownloadDistribution",
        "AmazonCloudFrontEdgeLocation",
        "AmazonCloudFrontFunctions",
        "AmazonCloudFrontStreamingDistribution"
      ]
    },
    {
      "service": "Amazon Route 53",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53",
      "nameWithPrefix": "ArchitectureServiceAmazonRoute53",
      "resources": [
        "AmazonRoute53HostedZone",
        "AmazonRoute53ReadinessChecks",
        "AmazonRoute53Resolver",
        "AmazonRoute53ResolverDNSFirewall",
        "AmazonRoute53ResolverQueryLogging",
        "AmazonRoute53RouteTable",
        "AmazonRoute53RoutingControls"
      ]
    },
    {
      "service": "Amazon Virtual Private Cloud",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVirtualPrivateCloud",
      "nameWithPrefix": "ArchitectureServiceAmazonVirtualPrivateCloud",
      "resources": [
        "AmazonVPCCarrierGateway",
        "AmazonVPCCustomerGateway",
        "AmazonVPCElasticNetworkAdapter",
        "AmazonVPCElasticNetworkInterface",
        "AmazonVPCEndpoints",
        "AmazonVPCFlowLogs",
        "AmazonVPCInternetGateway",
        "AmazonVPCNATGateway",
        "AmazonVPCNetworkAccessAnalyzer",
        "AmazonVPCNetworkAccessControlList",
        "AmazonVPCPeeringConnection",
        "AmazonVPCReachabilityAnalyzer",
        "AmazonVPCRouter",
        "AmazonVPCTrafficMirroring",
        "AmazonVPCVirtualprivatecloudVPC",
        "AmazonVPCVPNConnection",
        "AmazonVPCVPNGateway"
      ]
    },
    {
      "service": "Amazon VPC Lattice",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCLattice",
      "nameWithPrefix": "ArchitectureServiceAmazonVPCLattice"
    },
    {
      "service": "AWS App Mesh",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSAppMesh",
      "nameWithPrefix": "ArchitectureServiceAWSAppMesh",
      "resources": [
        "AWSAppMeshMesh",
        "AWSAppMeshVirtualGateway",
        "AWSAppMeshVirtualNode",
        "AWSAppMeshVirtualRouter",
        "AWSAppMeshVirtualService"
      ]
    },
    {
      "service": "AWS Client VPN",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSClientVPN",
      "nameWithPrefix": "ArchitectureServiceAWSClientVPN"
    },
    {
      "service": "AWS Cloud Map",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudMap",
      "nameWithPrefix": "ArchitectureServiceAWSCloudMap",
      "resources": [
        "AWSCloudMapNamespace",
        "AWSCloudMapResource",
        "AWSCloudMapService"
      ]
    },
    {
      "service": "AWS Cloud WAN",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudWAN",
      "nameWithPrefix": "ArchitectureServiceAWSCloudWAN",
      "resources": [
        "AWSCloudWANCoreNetworkEdge",
        "AWSCloudWANSegmentNetwork",
        "AWSCloudWANTransitGatewayRouteTableAttachment"
      ]
    },
    {
      "service": "AWS Direct Connect",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSDirectConnect",
      "nameWithPrefix": "ArchitectureServiceAWSDirectConnect",
      "resources": [
        "AWSDirectConnectGateway"
      ]
    },
    {
      "service": "AWS Global Accelerator",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSGlobalAccelerator",
      "nameWithPrefix": "ArchitectureServiceAWSGlobalAccelerator"
    },
    {
      "service": "AWS Private5G",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSPrivate5G",
      "nameWithPrefix": "ArchitectureServiceAWSPrivate5G"
    },
    {
      "service": "AWS Private Link",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSPrivateLink",
      "nameWithPrefix": "ArchitectureServiceAWSPrivateLink"
    },
    {
      "service": "AWS Site to Site VPN",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSSitetoSiteVPN",
      "nameWithPrefix": "ArchitectureServiceAWSSitetoSiteVPN"
    },
    {
      "service": "AWS Transit Gateway",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSTransitGateway",
      "nameWithPrefix": "ArchitectureServiceAWSTransitGateway",
      "resources": [
        "AWSTransitGatewayAttachment"
      ]
    },
    {
      "service": "AWS Verified Access",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSVerifiedAccess",
      "nameWithPrefix": "ArchitectureServiceAWSVerifiedAccess"
    },
    {
      "service": "Elastic Load Balancing",
      "type": "Architecture Service",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "ElasticLoadBalancing",
      "nameWithPrefix": "ArchitectureServiceElasticLoadBalancing",
      "resources": [
        "ElasticLoadBalancingApplicationLoadBalancer",
        "ElasticLoadBalancingClassicLoadBalancer",
        "ElasticLoadBalancingGatewayLoadBalancer",
        "ElasticLoadBalancingNetworkLoadBalancer"
      ]
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonAPIGatewayEndpoint",
      "nameWithPrefix": "ResourceAmazonAPIGatewayEndpoint"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonCloudFrontDownloadDistribution",
      "nameWithPrefix": "ResourceAmazonCloudFrontDownloadDistribution"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonCloudFrontEdgeLocation",
      "nameWithPrefix": "ResourceAmazonCloudFrontEdgeLocation"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonCloudFrontFunctions",
      "nameWithPrefix": "ResourceAmazonCloudFrontFunctions"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonCloudFrontStreamingDistribution",
      "nameWithPrefix": "ResourceAmazonCloudFrontStreamingDistribution"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53HostedZone",
      "nameWithPrefix": "ResourceAmazonRoute53HostedZone"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53ReadinessChecks",
      "nameWithPrefix": "ResourceAmazonRoute53ReadinessChecks"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53Resolver",
      "nameWithPrefix": "ResourceAmazonRoute53Resolver"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53ResolverDNSFirewall",
      "nameWithPrefix": "ResourceAmazonRoute53ResolverDNSFirewall"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53ResolverQueryLogging",
      "nameWithPrefix": "ResourceAmazonRoute53ResolverQueryLogging"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53RouteTable",
      "nameWithPrefix": "ResourceAmazonRoute53RouteTable"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonRoute53RoutingControls",
      "nameWithPrefix": "ResourceAmazonRoute53RoutingControls"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCCarrierGateway",
      "nameWithPrefix": "ResourceAmazonVPCCarrierGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCCustomerGateway",
      "nameWithPrefix": "ResourceAmazonVPCCustomerGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCElasticNetworkAdapter",
      "nameWithPrefix": "ResourceAmazonVPCElasticNetworkAdapter"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCElasticNetworkInterface",
      "nameWithPrefix": "ResourceAmazonVPCElasticNetworkInterface"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCEndpoints",
      "nameWithPrefix": "ResourceAmazonVPCEndpoints"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCFlowLogs",
      "nameWithPrefix": "ResourceAmazonVPCFlowLogs"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCInternetGateway",
      "nameWithPrefix": "ResourceAmazonVPCInternetGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCNATGateway",
      "nameWithPrefix": "ResourceAmazonVPCNATGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCNetworkAccessAnalyzer",
      "nameWithPrefix": "ResourceAmazonVPCNetworkAccessAnalyzer"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCNetworkAccessControlList",
      "nameWithPrefix": "ResourceAmazonVPCNetworkAccessControlList"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCPeeringConnection",
      "nameWithPrefix": "ResourceAmazonVPCPeeringConnection"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCReachabilityAnalyzer",
      "nameWithPrefix": "ResourceAmazonVPCReachabilityAnalyzer"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCRouter",
      "nameWithPrefix": "ResourceAmazonVPCRouter"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCTrafficMirroring",
      "nameWithPrefix": "ResourceAmazonVPCTrafficMirroring"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCVirtualprivatecloudVPC",
      "nameWithPrefix": "ResourceAmazonVPCVirtualprivatecloudVPC"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCVPNConnection",
      "nameWithPrefix": "ResourceAmazonVPCVPNConnection"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AmazonVPCVPNGateway",
      "nameWithPrefix": "ResourceAmazonVPCVPNGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSAppMeshMesh",
      "nameWithPrefix": "ResourceAWSAppMeshMesh"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSAppMeshVirtualGateway",
      "nameWithPrefix": "ResourceAWSAppMeshVirtualGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSAppMeshVirtualNode",
      "nameWithPrefix": "ResourceAWSAppMeshVirtualNode"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSAppMeshVirtualRouter",
      "nameWithPrefix": "ResourceAWSAppMeshVirtualRouter"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSAppMeshVirtualService",
      "nameWithPrefix": "ResourceAWSAppMeshVirtualService"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudMapNamespace",
      "nameWithPrefix": "ResourceAWSCloudMapNamespace"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudMapResource",
      "nameWithPrefix": "ResourceAWSCloudMapResource"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudMapService",
      "nameWithPrefix": "ResourceAWSCloudMapService"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudWANCoreNetworkEdge",
      "nameWithPrefix": "ResourceAWSCloudWANCoreNetworkEdge"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudWANSegmentNetwork",
      "nameWithPrefix": "ResourceAWSCloudWANSegmentNetwork"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSCloudWANTransitGatewayRouteTableAttachment",
      "nameWithPrefix": "ResourceAWSCloudWANTransitGatewayRouteTableAttachment"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSDirectConnectGateway",
      "nameWithPrefix": "ResourceAWSDirectConnectGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "AWSTransitGatewayAttachment",
      "nameWithPrefix": "ResourceAWSTransitGatewayAttachment"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "ElasticLoadBalancingApplicationLoadBalancer",
      "nameWithPrefix": "ResourceElasticLoadBalancingApplicationLoadBalancer"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "ElasticLoadBalancingClassicLoadBalancer",
      "nameWithPrefix": "ResourceElasticLoadBalancingClassicLoadBalancer"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "ElasticLoadBalancingGatewayLoadBalancer",
      "nameWithPrefix": "ResourceElasticLoadBalancingGatewayLoadBalancer"
    },
    {
      "type": "Resource",
      "categories": [
        "Networking Content Delivery"
      ],
      "name": "ElasticLoadBalancingNetworkLoadBalancer",
      "nameWithPrefix": "ResourceElasticLoadBalancingNetworkLoadBalancer"
    },
    {
      "type": "Category",
      "categories": [
        "NetworkingContentDelivery"
      ],
      "name": "NetworkingContentDelivery",
      "nameWithPrefix": "CategoryNetworkingContentDelivery"
    },
    {
      "service": "Amazon Braket",
      "type": "Architecture Service",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraket",
      "nameWithPrefix": "ArchitectureServiceAmazonBraket",
      "resources": [
        "AmazonBraketChandelier",
        "AmazonBraketChip",
        "AmazonBraketEmbeddedSimulator",
        "AmazonBraketManagedSimulator",
        "AmazonBraketNoiseSimulator",
        "AmazonBraketQPU",
        "AmazonBraketSimulator",
        "AmazonBraketSimulator1",
        "AmazonBraketSimulator2",
        "AmazonBraketSimulator3",
        "AmazonBraketSimulator4",
        "AmazonBraketStateVector",
        "AmazonBraketTensorNetwork"
      ]
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketChandelier",
      "nameWithPrefix": "ResourceAmazonBraketChandelier"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketChip",
      "nameWithPrefix": "ResourceAmazonBraketChip"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketEmbeddedSimulator",
      "nameWithPrefix": "ResourceAmazonBraketEmbeddedSimulator"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketManagedSimulator",
      "nameWithPrefix": "ResourceAmazonBraketManagedSimulator"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketNoiseSimulator",
      "nameWithPrefix": "ResourceAmazonBraketNoiseSimulator"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketQPU",
      "nameWithPrefix": "ResourceAmazonBraketQPU"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketSimulator",
      "nameWithPrefix": "ResourceAmazonBraketSimulator"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketSimulator1",
      "nameWithPrefix": "ResourceAmazonBraketSimulator1"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketSimulator2",
      "nameWithPrefix": "ResourceAmazonBraketSimulator2"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketSimulator3",
      "nameWithPrefix": "ResourceAmazonBraketSimulator3"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketSimulator4",
      "nameWithPrefix": "ResourceAmazonBraketSimulator4"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketStateVector",
      "nameWithPrefix": "ResourceAmazonBraketStateVector"
    },
    {
      "type": "Resource",
      "categories": [
        "Quantum Technologies"
      ],
      "name": "AmazonBraketTensorNetwork",
      "nameWithPrefix": "ResourceAmazonBraketTensorNetwork"
    },
    {
      "type": "Category",
      "categories": [
        "QuantumTechnologies"
      ],
      "name": "QuantumTechnologies",
      "nameWithPrefix": "CategoryQuantumTechnologies"
    },
    {
      "service": "AWS RoboMaker",
      "type": "Architecture Service",
      "categories": [
        "Robotics"
      ],
      "name": "AWSRoboMaker",
      "nameWithPrefix": "ArchitectureServiceAWSRoboMaker",
      "resources": [
        "AWSRoboMakerCloudExtensionsROS",
        "AWSRoboMakerDevelopmentEnvironment",
        "AWSRoboMakerFleetManagement",
        "AWSRoboMakerSimulation"
      ]
    },
    {
      "type": "Category",
      "categories": [
        "Robotics"
      ],
      "name": "Robotics",
      "nameWithPrefix": "CategoryRobotics"
    },
    {
      "type": "Resource",
      "categories": [
        "Robotics"
      ],
      "name": "AWSRoboMakerCloudExtensionsROS",
      "nameWithPrefix": "ResourceAWSRoboMakerCloudExtensionsROS"
    },
    {
      "type": "Resource",
      "categories": [
        "Robotics"
      ],
      "name": "AWSRoboMakerDevelopmentEnvironment",
      "nameWithPrefix": "ResourceAWSRoboMakerDevelopmentEnvironment"
    },
    {
      "type": "Resource",
      "categories": [
        "Robotics"
      ],
      "name": "AWSRoboMakerFleetManagement",
      "nameWithPrefix": "ResourceAWSRoboMakerFleetManagement"
    },
    {
      "type": "Resource",
      "categories": [
        "Robotics"
      ],
      "name": "AWSRoboMakerSimulation",
      "nameWithPrefix": "ResourceAWSRoboMakerSimulation"
    },
    {
      "service": "AWS Ground Station",
      "type": "Architecture Service",
      "categories": [
        "Satellite"
      ],
      "name": "AWSGroundStation",
      "nameWithPrefix": "ArchitectureServiceAWSGroundStation"
    },
    {
      "type": "Category",
      "categories": [
        "Satellite"
      ],
      "name": "Satellite",
      "nameWithPrefix": "CategorySatellite"
    },
    {
      "service": "Amazon Cloud Directory",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonCloudDirectory",
      "nameWithPrefix": "ArchitectureServiceAmazonCloudDirectory"
    },
    {
      "service": "Amazon Cognito",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonCognito",
      "nameWithPrefix": "ArchitectureServiceAmazonCognito"
    },
    {
      "service": "Amazon Detective",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonDetective",
      "nameWithPrefix": "ArchitectureServiceAmazonDetective"
    },
    {
      "service": "Amazon GuardDuty",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonGuardDuty",
      "nameWithPrefix": "ArchitectureServiceAmazonGuardDuty"
    },
    {
      "service": "Amazon Inspector",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonInspector",
      "nameWithPrefix": "ArchitectureServiceAmazonInspector",
      "resources": [
        "AmazonInspectorAgent"
      ]
    },
    {
      "service": "Amazon Macie",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonMacie",
      "nameWithPrefix": "ArchitectureServiceAmazonMacie"
    },
    {
      "service": "Amazon Security Lake",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonSecurityLake",
      "nameWithPrefix": "ArchitectureServiceAmazonSecurityLake"
    },
    {
      "service": "Amazon Verified Permissions",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonVerifiedPermissions",
      "nameWithPrefix": "ArchitectureServiceAmazonVerifiedPermissions"
    },
    {
      "service": "AWS Artifact",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSArtifact",
      "nameWithPrefix": "ArchitectureServiceAWSArtifact"
    },
    {
      "service": "AWS Audit Manager",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSAuditManager",
      "nameWithPrefix": "ArchitectureServiceAWSAuditManager"
    },
    {
      "service": "AWS Certificate Manager",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSCertificateManager",
      "nameWithPrefix": "ArchitectureServiceAWSCertificateManager",
      "resources": [
        "AWSCertificateManagerCertificateAuthority"
      ]
    },
    {
      "service": "AWS CloudHSM",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSCloudHSM",
      "nameWithPrefix": "ArchitectureServiceAWSCloudHSM"
    },
    {
      "service": "AWS Directory Service",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSDirectoryService",
      "nameWithPrefix": "ArchitectureServiceAWSDirectoryService",
      "resources": [
        "AWSDirectoryServiceADConnector",
        "AWSDirectoryServiceAWSManagedMicrosoftAD",
        "AWSDirectoryServiceSimpleAD"
      ]
    },
    {
      "service": "AWS Firewall Manager",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSFirewallManager",
      "nameWithPrefix": "ArchitectureServiceAWSFirewallManager"
    },
    {
      "service": "AWS IAM Identity Center",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIAMIdentityCenter",
      "nameWithPrefix": "ArchitectureServiceAWSIAMIdentityCenter"
    },
    {
      "service": "AWS Identity and Access Management",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityandAccessManagement",
      "nameWithPrefix": "ArchitectureServiceAWSIdentityandAccessManagement",
      "resources": [
        "AWSIdentityAccessManagementAddon",
        "AWSIdentityAccessManagementAWSSTS",
        "AWSIdentityAccessManagementAWSSTSAlternate",
        "AWSIdentityAccessManagementDataEncryptionKey",
        "AWSIdentityAccessManagementEncryptedData",
        "AWSIdentityAccessManagementIAMAccessAnalyzer",
        "AWSIdentityAccessManagementIAMRolesAnywhere",
        "AWSIdentityAccessManagementLongTermSecurityCredential",
        "AWSIdentityAccessManagementMFAToken",
        "AWSIdentityAccessManagementPermissions",
        "AWSIdentityAccessManagementRole",
        "AWSIdentityAccessManagementTemporarySecurityCredential"
      ]
    },
    {
      "service": "AWS KMS",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSKeyManagementService",
      "nameWithPrefix": "ArchitectureServiceAWSKeyManagementService",
      "resources": [
        "AWSKeyManagementServiceExternalKeyStore"
      ]
    },
    {
      "service": "AWS Network Firewall",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSNetworkFirewall",
      "nameWithPrefix": "ArchitectureServiceAWSNetworkFirewall",
      "resources": [
        "AWSNetworkFirewallEndpoints"
      ]
    },
    {
      "service": "AWS Payment Cryptography",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSPaymentCryptography",
      "nameWithPrefix": "ArchitectureServiceAWSPaymentCryptography"
    },
    {
      "service": "AWS Private Certificate Authority",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSPrivateCertificateAuthority",
      "nameWithPrefix": "ArchitectureServiceAWSPrivateCertificateAuthority"
    },
    {
      "service": "AWS Resource Access Manager",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSResourceAccessManager",
      "nameWithPrefix": "ArchitectureServiceAWSResourceAccessManager"
    },
    {
      "service": "AWS Secrets Manager",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSSecretsManager",
      "nameWithPrefix": "ArchitectureServiceAWSSecretsManager"
    },
    {
      "service": "AWS Security Hub",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSSecurityHub",
      "nameWithPrefix": "ArchitectureServiceAWSSecurityHub",
      "resources": [
        "AWSSecurityHubFinding"
      ]
    },
    {
      "service": "AWS Security Incident Response",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSSecurityIncidentResponse",
      "nameWithPrefix": "ArchitectureServiceAWSSecurityIncidentResponse"
    },
    {
      "service": "AWS Shield",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSShield",
      "nameWithPrefix": "ArchitectureServiceAWSShield",
      "resources": [
        "AWSShieldAWSShieldAdvanced"
      ]
    },
    {
      "service": "AWS Signer",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSSigner",
      "nameWithPrefix": "ArchitectureServiceAWSSigner"
    },
    {
      "service": "AWS WAF",
      "type": "Architecture Service",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAF",
      "nameWithPrefix": "ArchitectureServiceAWSWAF",
      "resources": [
        "AWSWAFBadBot",
        "AWSWAFBot",
        "AWSWAFBotControl",
        "AWSWAFFilteringRule",
        "AWSWAFLabels",
        "AWSWAFManagedRule",
        "AWSWAFRule"
      ]
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AmazonInspectorAgent",
      "nameWithPrefix": "ResourceAmazonInspectorAgent"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSCertificateManagerCertificateAuthority",
      "nameWithPrefix": "ResourceAWSCertificateManagerCertificateAuthority"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSDirectoryServiceADConnector",
      "nameWithPrefix": "ResourceAWSDirectoryServiceADConnector"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSDirectoryServiceAWSManagedMicrosoftAD",
      "nameWithPrefix": "ResourceAWSDirectoryServiceAWSManagedMicrosoftAD"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSDirectoryServiceSimpleAD",
      "nameWithPrefix": "ResourceAWSDirectoryServiceSimpleAD"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementAddon",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementAddon"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementAWSSTS",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementAWSSTS"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementAWSSTSAlternate",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementAWSSTSAlternate"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementDataEncryptionKey",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementDataEncryptionKey"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementEncryptedData",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementEncryptedData"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementIAMAccessAnalyzer",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementIAMAccessAnalyzer"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementIAMRolesAnywhere",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementIAMRolesAnywhere"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementLongTermSecurityCredential",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementLongTermSecurityCredential"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementMFAToken",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementMFAToken"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementPermissions",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementPermissions"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementRole",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementRole"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSIdentityAccessManagementTemporarySecurityCredential",
      "nameWithPrefix": "ResourceAWSIdentityAccessManagementTemporarySecurityCredential"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSKeyManagementServiceExternalKeyStore",
      "nameWithPrefix": "ResourceAWSKeyManagementServiceExternalKeyStore"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSNetworkFirewallEndpoints",
      "nameWithPrefix": "ResourceAWSNetworkFirewallEndpoints"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSSecurityHubFinding",
      "nameWithPrefix": "ResourceAWSSecurityHubFinding"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSShieldAWSShieldAdvanced",
      "nameWithPrefix": "ResourceAWSShieldAWSShieldAdvanced"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAFBadBot",
      "nameWithPrefix": "ResourceAWSWAFBadBot"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAFBot",
      "nameWithPrefix": "ResourceAWSWAFBot"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAFBotControl",
      "nameWithPrefix": "ResourceAWSWAFBotControl"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAFFilteringRule",
      "nameWithPrefix": "ResourceAWSWAFFilteringRule"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAFLabels",
      "nameWithPrefix": "ResourceAWSWAFLabels"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAFManagedRule",
      "nameWithPrefix": "ResourceAWSWAFManagedRule"
    },
    {
      "type": "Resource",
      "categories": [
        "Security Identity Compliance"
      ],
      "name": "AWSWAFRule",
      "nameWithPrefix": "ResourceAWSWAFRule"
    },
    {
      "type": "Category",
      "categories": [
        "SecurityIdentityCompliance"
      ],
      "name": "SecurityIdentityCompliance",
      "nameWithPrefix": "CategorySecurityIdentityCompliance"
    },
    {
      "type": "Category",
      "categories": [
        "Serverless"
      ],
      "name": "Serverless",
      "nameWithPrefix": "CategoryServerless"
    },
    {
      "service": "Amazon EFS",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonEFS",
      "nameWithPrefix": "ArchitectureServiceAmazonEFS",
      "resources": [
        "AmazonElasticFileSystemEFSIntelligentTiering",
        "AmazonElasticFileSystemEFSOneZone",
        "AmazonElasticFileSystemEFSOneZoneInfrequentAccess",
        "AmazonElasticFileSystemEFSStandard",
        "AmazonElasticFileSystemEFSStandardInfrequentAccess",
        "AmazonElasticFileSystemElasticThroughput",
        "AmazonElasticFileSystemFileSystem"
      ]
    },
    {
      "service": "Amazon EBS",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticBlockStore",
      "nameWithPrefix": "ArchitectureServiceAmazonElasticBlockStore",
      "resources": [
        "AmazonElasticBlockStoreAmazonDataLifecycleManager",
        "AmazonElasticBlockStoreMultipleVolumes",
        "AmazonElasticBlockStoreSnapshot",
        "AmazonElasticBlockStoreVolume",
        "AmazonElasticBlockStoreVolumegp3"
      ]
    },
    {
      "service": "Amazon File Cache",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFileCache",
      "nameWithPrefix": "ArchitectureServiceAmazonFileCache",
      "resources": [
        "AmazonFileCacheHybridNFSlinkeddatasets",
        "AmazonFileCacheOnpremisesNFSlinkeddatasets",
        "AmazonFileCacheS3linkeddatasets"
      ]
    },
    {
      "service": "Amazon FSx",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFSx",
      "nameWithPrefix": "ArchitectureServiceAmazonFSx"
    },
    {
      "service": "Amazon FSx for Lustre",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFSxforLustre",
      "nameWithPrefix": "ArchitectureServiceAmazonFSxforLustre"
    },
    {
      "service": "Amazon FSx for Net App ONTAP",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFSxforNetAppONTAP",
      "nameWithPrefix": "ArchitectureServiceAmazonFSxforNetAppONTAP"
    },
    {
      "service": "Amazon FSx for Open ZFS",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFSxforOpenZFS",
      "nameWithPrefix": "ArchitectureServiceAmazonFSxforOpenZFS"
    },
    {
      "service": "Amazon FSx for WFS",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFSxforWFS",
      "nameWithPrefix": "ArchitectureServiceAmazonFSxforWFS"
    },
    {
      "service": "Amazon S3 on Outposts",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonS3onOutposts",
      "nameWithPrefix": "ArchitectureServiceAmazonS3onOutposts"
    },
    {
      "service": "Amazon S3",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageService",
      "nameWithPrefix": "ArchitectureServiceAmazonSimpleStorageService",
      "resources": [
        "AmazonSimpleStorageServiceBucket",
        "AmazonSimpleStorageServiceBucketWithObjects",
        "AmazonSimpleStorageServiceDirectorybucket",
        "AmazonSimpleStorageServiceGeneralAccessPoints",
        "AmazonSimpleStorageServiceGlacierArchive",
        "AmazonSimpleStorageServiceGlacierVault",
        "AmazonSimpleStorageServiceObject",
        "AmazonSimpleStorageServiceS3BatchOperations",
        "AmazonSimpleStorageServiceS3ExpressOneZone",
        "AmazonSimpleStorageServiceS3GlacierDeepArchive",
        "AmazonSimpleStorageServiceS3GlacierFlexibleRetrieval",
        "AmazonSimpleStorageServiceS3GlacierInstantRetrieval",
        "AmazonSimpleStorageServiceS3IntelligentTiering",
        "AmazonSimpleStorageServiceS3MultiRegionAccessPoints",
        "AmazonSimpleStorageServiceS3ObjectLambda",
        "AmazonSimpleStorageServiceS3ObjectLambdaAccessPoints",
        "AmazonSimpleStorageServiceS3ObjectLock",
        "AmazonSimpleStorageServiceS3OneZoneIA",
        "AmazonSimpleStorageServiceS3OnOutposts",
        "AmazonSimpleStorageServiceS3Replication",
        "AmazonSimpleStorageServiceS3ReplicationTimeControl",
        "AmazonSimpleStorageServiceS3Select",
        "AmazonSimpleStorageServiceS3Standard",
        "AmazonSimpleStorageServiceS3StandardIA",
        "AmazonSimpleStorageServiceS3StorageLens",
        "AmazonSimpleStorageServiceS3Tables",
        "AmazonSimpleStorageServiceVPCAccessPoints"
      ]
    },
    {
      "service": "Amazon S3 Glacier",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceGlacier",
      "nameWithPrefix": "ArchitectureServiceAmazonSimpleStorageServiceGlacier",
      "resources": [
        "AmazonSimpleStorageServiceGlacierArchive",
        "AmazonSimpleStorageServiceGlacierVault"
      ]
    },
    {
      "service": "AWS Backup",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackup",
      "nameWithPrefix": "ArchitectureServiceAWSBackup",
      "resources": [
        "AWSBackupAuditManager",
        "AWSBackupAWSBackupforAWSCloudFormation",
        "AWSBackupAWSBackupsupportforAmazonFSxforNetAppONTAP",
        "AWSBackupAWSBackupsupportforAmazonS3",
        "AWSBackupAWSBackupSupportforVMwareWorkloads",
        "AWSBackupBackupPlan",
        "AWSBackupBackupRestore",
        "AWSBackupBackupVault",
        "AWSBackupComplianceReporting",
        "AWSBackupCompute",
        "AWSBackupDatabase",
        "AWSBackupGateway",
        "AWSBackupLegalHold",
        "AWSBackupRecoveryPointObjective",
        "AWSBackupRecoveryTimeObjective",
        "AWSBackupStorage",
        "AWSBackupVaultLock",
        "AWSBackupVirtualMachine",
        "AWSBackupVirtualMachineMonitor"
      ]
    },
    {
      "service": "AWS Elastic Disaster Recovery",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AWSElasticDisasterRecovery",
      "nameWithPrefix": "ArchitectureServiceAWSElasticDisasterRecovery"
    },
    {
      "service": "AWS Snowball",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AWSSnowball",
      "nameWithPrefix": "ArchitectureServiceAWSSnowball",
      "resources": [
        "AWSSnowballSnowballImportExport"
      ]
    },
    {
      "service": "AWS Snowball Edge",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AWSSnowballEdge",
      "nameWithPrefix": "ArchitectureServiceAWSSnowballEdge"
    },
    {
      "service": "AWS Storage Gateway",
      "type": "Architecture Service",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGateway",
      "nameWithPrefix": "ArchitectureServiceAWSStorageGateway",
      "resources": [
        "AWSStorageGatewayAmazonFSxFileGateway",
        "AWSStorageGatewayAmazonS3FileGateway",
        "AWSStorageGatewayCachedVolume",
        "AWSStorageGatewayFileGateway",
        "AWSStorageGatewayNoncachedVolume",
        "AWSStorageGatewayTapeGateway",
        "AWSStorageGatewayVirtualTapeLibrary",
        "AWSStorageGatewayVolumeGateway"
      ]
    },
    {
      "type": "Category",
      "categories": [
        "Storage"
      ],
      "name": "Storage",
      "nameWithPrefix": "CategoryStorage"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticBlockStoreAmazonDataLifecycleManager",
      "nameWithPrefix": "ResourceAmazonElasticBlockStoreAmazonDataLifecycleManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticBlockStoreMultipleVolumes",
      "nameWithPrefix": "ResourceAmazonElasticBlockStoreMultipleVolumes"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticBlockStoreSnapshot",
      "nameWithPrefix": "ResourceAmazonElasticBlockStoreSnapshot"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticBlockStoreVolume",
      "nameWithPrefix": "ResourceAmazonElasticBlockStoreVolume"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticBlockStoreVolumegp3",
      "nameWithPrefix": "ResourceAmazonElasticBlockStoreVolumegp3"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticFileSystemEFSIntelligentTiering",
      "nameWithPrefix": "ResourceAmazonElasticFileSystemEFSIntelligentTiering"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticFileSystemEFSOneZone",
      "nameWithPrefix": "ResourceAmazonElasticFileSystemEFSOneZone"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticFileSystemEFSOneZoneInfrequentAccess",
      "nameWithPrefix": "ResourceAmazonElasticFileSystemEFSOneZoneInfrequentAccess"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticFileSystemEFSStandard",
      "nameWithPrefix": "ResourceAmazonElasticFileSystemEFSStandard"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticFileSystemEFSStandardInfrequentAccess",
      "nameWithPrefix": "ResourceAmazonElasticFileSystemEFSStandardInfrequentAccess"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticFileSystemElasticThroughput",
      "nameWithPrefix": "ResourceAmazonElasticFileSystemElasticThroughput"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonElasticFileSystemFileSystem",
      "nameWithPrefix": "ResourceAmazonElasticFileSystemFileSystem"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFileCacheHybridNFSlinkeddatasets",
      "nameWithPrefix": "ResourceAmazonFileCacheHybridNFSlinkeddatasets"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFileCacheOnpremisesNFSlinkeddatasets",
      "nameWithPrefix": "ResourceAmazonFileCacheOnpremisesNFSlinkeddatasets"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonFileCacheS3linkeddatasets",
      "nameWithPrefix": "ResourceAmazonFileCacheS3linkeddatasets"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceBucket",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceBucket"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceBucketWithObjects",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceBucketWithObjects"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceDirectorybucket",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceDirectorybucket"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceGeneralAccessPoints",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceGeneralAccessPoints"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceGlacierArchive",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceGlacierArchive"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceGlacierVault",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceGlacierVault"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceObject",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceObject"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3BatchOperations",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3BatchOperations"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3ExpressOneZone",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3ExpressOneZone"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3GlacierDeepArchive",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3GlacierDeepArchive"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3GlacierFlexibleRetrieval",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3GlacierFlexibleRetrieval"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3GlacierInstantRetrieval",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3GlacierInstantRetrieval"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3IntelligentTiering",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3IntelligentTiering"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3MultiRegionAccessPoints",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3MultiRegionAccessPoints"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3ObjectLambda",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3ObjectLambda"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3ObjectLambdaAccessPoints",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3ObjectLambdaAccessPoints"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3ObjectLock",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3ObjectLock"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3OneZoneIA",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3OneZoneIA"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3OnOutposts",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3OnOutposts"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3Replication",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3Replication"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3ReplicationTimeControl",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3ReplicationTimeControl"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3Select",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3Select"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3Standard",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3Standard"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3StandardIA",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3StandardIA"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3StorageLens",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3StorageLens"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceS3Tables",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceS3Tables"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AmazonSimpleStorageServiceVPCAccessPoints",
      "nameWithPrefix": "ResourceAmazonSimpleStorageServiceVPCAccessPoints"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupAuditManager",
      "nameWithPrefix": "ResourceAWSBackupAuditManager"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupAWSBackupforAWSCloudFormation",
      "nameWithPrefix": "ResourceAWSBackupAWSBackupforAWSCloudFormation"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupAWSBackupsupportforAmazonFSxforNetAppONTAP",
      "nameWithPrefix": "ResourceAWSBackupAWSBackupsupportforAmazonFSxforNetAppONTAP"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupAWSBackupsupportforAmazonS3",
      "nameWithPrefix": "ResourceAWSBackupAWSBackupsupportforAmazonS3"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupAWSBackupSupportforVMwareWorkloads",
      "nameWithPrefix": "ResourceAWSBackupAWSBackupSupportforVMwareWorkloads"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupBackupPlan",
      "nameWithPrefix": "ResourceAWSBackupBackupPlan"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupBackupRestore",
      "nameWithPrefix": "ResourceAWSBackupBackupRestore"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupBackupVault",
      "nameWithPrefix": "ResourceAWSBackupBackupVault"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupComplianceReporting",
      "nameWithPrefix": "ResourceAWSBackupComplianceReporting"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupCompute",
      "nameWithPrefix": "ResourceAWSBackupCompute"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupDatabase",
      "nameWithPrefix": "ResourceAWSBackupDatabase"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupGateway",
      "nameWithPrefix": "ResourceAWSBackupGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupLegalHold",
      "nameWithPrefix": "ResourceAWSBackupLegalHold"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupRecoveryPointObjective",
      "nameWithPrefix": "ResourceAWSBackupRecoveryPointObjective"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupRecoveryTimeObjective",
      "nameWithPrefix": "ResourceAWSBackupRecoveryTimeObjective"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupStorage",
      "nameWithPrefix": "ResourceAWSBackupStorage"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupVaultLock",
      "nameWithPrefix": "ResourceAWSBackupVaultLock"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupVirtualMachine",
      "nameWithPrefix": "ResourceAWSBackupVirtualMachine"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSBackupVirtualMachineMonitor",
      "nameWithPrefix": "ResourceAWSBackupVirtualMachineMonitor"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSSnowballSnowballImportExport",
      "nameWithPrefix": "ResourceAWSSnowballSnowballImportExport"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayAmazonFSxFileGateway",
      "nameWithPrefix": "ResourceAWSStorageGatewayAmazonFSxFileGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayAmazonS3FileGateway",
      "nameWithPrefix": "ResourceAWSStorageGatewayAmazonS3FileGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayCachedVolume",
      "nameWithPrefix": "ResourceAWSStorageGatewayCachedVolume"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayFileGateway",
      "nameWithPrefix": "ResourceAWSStorageGatewayFileGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayNoncachedVolume",
      "nameWithPrefix": "ResourceAWSStorageGatewayNoncachedVolume"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayTapeGateway",
      "nameWithPrefix": "ResourceAWSStorageGatewayTapeGateway"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayVirtualTapeLibrary",
      "nameWithPrefix": "ResourceAWSStorageGatewayVirtualTapeLibrary"
    },
    {
      "type": "Resource",
      "categories": [
        "Storage"
      ],
      "name": "AWSStorageGatewayVolumeGateway",
      "nameWithPrefix": "ResourceAWSStorageGatewayVolumeGateway"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "AutoScalinggroup",
      "nameWithPrefix": "ArchitectureGroup-AutoScalinggroup"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "AWSAccount",
      "nameWithPrefix": "ArchitectureGroup-AWSAccount"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "AWSCloud",
      "nameWithPrefix": "ArchitectureGroup-AWSCloud"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "AWSCloudDark",
      "nameWithPrefix": "ArchitectureGroup-AWSCloudDark"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "AWSCloudlogo",
      "nameWithPrefix": "ArchitectureGroup-AWSCloudlogo"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "AWSCloudlogoDark",
      "nameWithPrefix": "ArchitectureGroup-AWSCloudlogoDark"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "AWSIoTGreengrassDeployment",
      "nameWithPrefix": "ArchitectureGroup-AWSIoTGreengrassDeployment"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "Corporatedatacenter",
      "nameWithPrefix": "ArchitectureGroup-Corporatedatacenter"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "EC2instancecontents",
      "nameWithPrefix": "ArchitectureGroup-EC2instancecontents"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "Privatesubnet",
      "nameWithPrefix": "ArchitectureGroup-Privatesubnet"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "Publicsubnet",
      "nameWithPrefix": "ArchitectureGroup-Publicsubnet"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "Region",
      "nameWithPrefix": "ArchitectureGroup-Region"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "Servercontents",
      "nameWithPrefix": "ArchitectureGroup-Servercontents"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "SpotFleet",
      "nameWithPrefix": "ArchitectureGroup-SpotFleet"
    },
    {
      "type": "Architecture Group",
      "categories": [],
      "name": "VirtualprivatecloudVPC",
      "nameWithPrefix": "ArchitectureGroup-VirtualprivatecloudVPC"
    }
  ]
}